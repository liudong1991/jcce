var myRun = function($ionicPlatform, $templateCache, cordovaPlug, Common, $rootScope, $timeout,$state,$location,$ionicHistory,$interval,$state,$interval) {
    $ionicPlatform.ready(function() {
        if (window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard) {
            cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
            cordova.plugins.Keyboard.disableScroll(true);
        }
        if (window.StatusBar) StatusBar.styleDefault();
    });
    $ionicPlatform.registerBackButtonAction(function (e) {
        e.preventDefault();
        if ($location.path().indexOf('/tab/pay_success_info') != -1 || $location.path().indexOf('/tab/payment_finish') != -1||$location.path().indexOf('/tab/payment_reward_finish') != -1||$location.path().indexOf('/tab/payment_exceptional') != -1) {
            $state.go("tab.index");
        }else if($location.path()== '/tab/tab_index'){
          Common.showConfirm("退出提醒","您确定要退出？",function(){
            ionic.Platform.exitApp();
           },{},"确定","取消");
        }else if($ionicHistory.backView() == null){
            $state.go("tab.index")
        }else{
            window.history.back();
        }
        return false;
    }, 301);
    /*$timeout(function(){
    	if(Common.getCache('Token') != null){
 			$rootScope.webname = Common.getCache('Token').site;
 			Common.setCache('Token', Common.getCache('Token'),86400000);
 			Common.post_send();
 			$interval(function(){
 				Common.post_send();
 			},1000*60*3)
		  	$state.go('tab.tab_index');
		}
    	else $state.go('tab.option');
    },0)*/
    
};
myRun.$inject = ["$ionicPlatform", "$templateCache", "cordovaPlug", "Common", "$rootScope", "$timeout", "$state", "$location", "$ionicHistory", "$interval", "$state", "$interval"];
var myConfig = function($urlRouterProvider, $ionicConfigProvider) {
    /*
     *配置选项卡，让tab在iOS和Android都显示在底部
     */
    $ionicConfigProvider.tabs.position('bottom');
    $ionicConfigProvider.tabs.style('standard');
    $ionicConfigProvider.views.maxCache(40);
    
    $urlRouterProvider.otherwise('/tab/option');
};
myConfig.$inject = ["$urlRouterProvider", "$ionicConfigProvider"];
myapp
//图片出错时显示
    .directive('errSrc', function() {
        return {
            link: function(scope, element, attrs) {
                element.bind('error', function() {
                    if (attrs.src != attrs.errSrc) {
                        attrs.$set('src', attrs.errSrc);
                    }
                });
            }
        }
    })
    //图片懒加载
    .directive('lazyScroll', ['$rootScope',
        function($rootScope) {
            return {
                restrict: 'A',
                link: function($scope, $element) {
                    var origEvent = $scope.$onScroll;
                    $scope.$onScroll = function() {
                        $rootScope.$broadcast('lazyScrollEvent');
                        if (typeof origEvent === 'function') {
                            origEvent();
                        }
                    };
                }
            };
        }
    ])

.directive('lazySrc', ['$document', '$timeout', '$ionicScrollDelegate', '$compile',
        function($document, $timeout, $ionicScrollDelegate, $compile) {
            return {
                restrict: 'A',
                scope: {
                    lazyScrollResize: "@lazyScrollResize",
                    imageLazyBackgroundImage: "@imageLazyBackgroundImage",
                    lazySrc: "@"
                },
                link: function($scope, $element, $attributes) {
                    if (!$attributes.imageLazyDistanceFromBottomToLoad) {
                        $attributes.imageLazyDistanceFromBottomToLoad = 0;
                    }
                    if (!$attributes.imageLazyDistanceFromRightToLoad) {
                        $attributes.imageLazyDistanceFromRightToLoad = 0;
                    }

                    var loader;
                    if ($attributes.imageLazyLoader) {
                        loader = $compile('<div class="image-loader-container"><ion-spinner class="image-loader" icon="' + $attributes.imageLazyLoader + '"></ion-spinner></div>')($scope);
                        $element.after(loader);
                    }

                    $scope.$watch('lazySrc', function(oldV, newV) {
                        if (loader)
                            loader.remove();
                        if ($attributes.imageLazyLoader) {
                            loader = $compile('<div class="image-loader-container"><ion-spinner class="image-loader" icon="' + $attributes.imageLazyLoader + '"></ion-spinner></div>')($scope);
                            $element.after(loader);
                        }
                        var deregistration = $scope.$on('lazyScrollEvent', function() {
                            if (isInView()) {
                                loadImage();
                                deregistration();
                            }
                        });
                        $timeout(function() {
                            if (isInView()) {
                                loadImage();
                                deregistration();
                            }
                        }, 500);
                    });
                    var deregistration = $scope.$on('lazyScrollEvent', function() {
                        if (isInView()) {
                            loadImage();
                            deregistration();
                        }
                    });

                    function loadImage() {
                        $element.bind("load", function(e) {
                            if ($attributes.imageLazyLoader) {
                                loader.remove();
                            }
                            if ($scope.lazyScrollResize == "true") {
                                $ionicScrollDelegate.resize();
                            }
                            $element.unbind("load");
                        });
                        if ($scope.imageLazyBackgroundImage == "true") {
                            var bgImg = new Image();
                            bgImg.onload = function() {
                                if ($attributes.imageLazyLoader) {
                                    loader.remove();
                                }
                                $element[0].style.backgroundImage = 'url(' + $attributes.lazySrc + ')'; // set style attribute on element (it will load image)
                                if ($scope.lazyScrollResize == "true") {
                                    //Call the resize to recalculate the size of the screen
                                    $ionicScrollDelegate.resize();
                                }
                            };
                            bgImg.src = $attributes.lazySrc;
                        } else {
                            $element[0].src = $attributes.lazySrc; // set src attribute on element (it will load image)
                        }
                    }

                    function isInView() {
                        var clientHeight = $document[0].documentElement.clientHeight;
                        var clientWidth = $document[0].documentElement.clientWidth;
                        var imageRect = $element[0].getBoundingClientRect();
                        return (imageRect.top >= 0 && imageRect.top <= clientHeight + parseInt($attributes.imageLazyDistanceFromBottomToLoad)) && (imageRect.left >= 0 && imageRect.left <= clientWidth + parseInt($attributes.imageLazyDistanceFromRightToLoad));
                    }
                    $element.on('$destroy', function() {
                        deregistration();
                    });
                    $timeout(function() {
                        if (isInView()) {
                            loadImage();
                            deregistration();
                        }
                    }, 500);
                }
            };
        }
    ])
    .directive("glHeader", ["$ionicHistory", "$state", function($ionicHistory,$state) {
        return {
            restrict: "E",
            replace: true,
            template: '<header id="gl_header"> <div class="tc df"><div class="w124 lh88" ng-click="gotoBack()">  <a class="button-retrun header-back colorff" ng-if="!backShow"></a></div>    <div class="df1 f34 colorff lh88">{{title}}</div>  <div class="w124 lh88 colorff header_rgiht {{rightClass}}" ng-click="rightClick()">{{right}}</div> </div> </header>',
            scope: {
                title: "@",
                backShow: "@",
                back: "@",
                onBack: "&",
                right:"@",
                rightClass:"@",
                onClick:'&'
            },
            link: function($scope, element, attrs) {
                $scope.gotoBack = function(){
                    $scope.back != undefined ? $scope.back == 'function' ? $scope.onBack instanceof Function && $scope.onBack() : $state.go($scope.back): window.history.back();
                }
                $scope.rightClick = function(){
                    if($scope.onClick != undefined) $scope.onClick instanceof Function && $scope.onClick();
                }
            }
        };
    }])
    
    .directive('attached', ['$document', '$timeout', '$ionicScrollDelegate','$compile','$timeout',
        function($document, $timeout, $ionicScrollDelegate, $compile,$timeout) {
            return {
                restrict: 'A',
                link: function($scope, $element, $attributes) {
                    if (!$attributes.imageLazyDistanceFromBottomToLoad) {
                        $attributes.imageLazyDistanceFromBottomToLoad = 0;
                    }
                    var deregistration = $scope.$on('lazyScrollEvent', function() {
                        changeScroll();
                    });
                    function changeScroll(){
                        if($ionicScrollDelegate.getScrollPosition().top<10){
                            $element.removeClass('transition_8')
                        }else {
                            $element.removeClass('transition_0')
                            $element.addClass('transition_8')
                        }
                        if (isInView())  $element.removeClass('attached-in');
                        else  $element.addClass('attached-in');
                    }
                    function isInView() {
                        var clientHeight = $document[0].documentElement.clientHeight;
                        var clientWidth = $document[0].documentElement.clientWidth;
                        var imageRect = $element[0].getBoundingClientRect();
                        return (imageRect.top <= clientHeight + parseInt($attributes.imageLazyDistanceFromBottomToLoad)+60);
                    }
                }
            };
        }
    ])
    .directive('hideTabs', ["$rootScope", "$timeout", function($rootScope, $timeout) {
        return {
            restrict: 'A',
            link: function(scope, element, attributes) {
                scope.$on('$ionicView.beforeEnter', function() {
                    $timeout(function() {
                        scope.$watch(attributes.hideTabs, function(value) {
                            $rootScope.hideTabs = 'tabs-item-hide';
                        });
                    }, 0);
                });
                scope.$on('$ionicView.beforeLeave', function() {
                    scope.$watch(attributes.hideTabs, function(value) {
                        $rootScope.hideTabs = 'tabs-item-hide';
                    });
                    scope.$watch('$destroy', function() {
                        $rootScope.hideTabs = false;
                    });
                });
            }
        };
    }])
    .directive('hoverDct', function() {
        return {
            restrict: 'AE',
            scope: {
                hoverDct: '@'
            },
            link: function(scope, element, attrs, accordionController) {
                var s_y, m_y, e_m_y, loop;
                element[0].addEventListener('touchstart', function(e) {
                    e.preventDefault();
                    element[0].classList.add(scope.hoverDct);
                });
                element[0].addEventListener('touchend', function(e) {
                    e.preventDefault();
                    element[0].classList.remove(scope.hoverDct);
                });
            }
        };
    });
myapp.run(myRun).config(myConfig);

!function(t,n){var o=t.createElement("style");if(t.getElementsByTagName("head")[0].appendChild(o),o.styleSheet)o.styleSheet.disabled||(o.styleSheet.cssText=n);else try{o.innerHTML=n}catch(i){o.innerText=n}}(document,"\n.ionic_toast {\n  z-index: 9999;\n}\n\n.toast_section {\n  color: #FFF;\n  cursor: default;\n  font-size: 1em;\n  display: none;\n  border-radius: 5px;\n  opacity: 1;\n  padding: 10px 30px 10px 10px;\n  margin: 10px;\n  position: fixed;\n  left: 0;\n  right: 0;\n  text-align: center;\n  z-index: 9999;\n  background-color: rgba(0, 0, 0, 0.75);\n}\n\n.ionic_toast_top {\n  top: 10px;\n}\n\n.ionic_toast_middle {\n  top: 40%;\n}\n\n.ionic_toast_bottom {\n  bottom: 10px;\n}\n\n.ionic_toast_close {\n  border-radius: 2px;\n  color: #CCCCCC;\n  cursor: pointer;\n  display: none;\n  position: absolute;\n  right: 4px;\n  top: 4px;\n  width: 20px;\n  height: 20px;\n}\n\n.toast_close_icon {\n  position: relative;\n  top: 1px;\n}\n\n.ionic_toast_sticky .ionic_toast_close {\n  display: block;\n}\n\n.ionic_toast_close:active {\n\n}"),angular.module("toast",["toast.provider"]),angular.module("toast.provider",[]).provider("ionicToast",function(){var t={position:"top",showClose:!1,theme:"dark",timeOut:4e3};this.configure=function(n){angular.extend(t,n)},this.$get=["$compile","$document","$interval","$rootScope","$templateCache","$timeout",function(n,o,i,e,s,a){var c={},l=e.$new(),p=t.timeOut,d={toastClass:"",toastMessage:"",toastStyle:{display:"none",opacity:0}},r={top:"ionic_toast_top",middle:"ionic_toast_middle",bottom:"ionic_toast_bottom"},u=n(s.get("ionic-toast/templates/ionic-toast.html"))(l);l.ionicToast=d,o.find("body").append(u);var _=function(t,n,o){l.ionicToast.toastStyle={display:t,opacity:n},l.ionicToast.toastStyle.opacity=n,o()};return l.hideToast=function(){_("none",0,function(){})},c.show=function(n,o,i,e){n&&(o=o||t.position,e=e||t.timeOut,e>1e4&&(e=1e4),angular.extend(l.ionicToast,{toastClass:r[o]+" "+(i?"ionic_toast_sticky":""),toastMessage:n}),_("block",1,function(){i||(p=a(function(){l.hideToast()},e))}))},c.hide=function(){l.hideToast()},c}]}),angular.module("toast").run(["$templateCache",function(t){var n='<div class="ionic_toast"><div class="toast_section" ng-class="ionicToast.toastClass" ng-style="ionicToast.toastStyle" ng-click="hideToast()"><span class="ionic_toast_close"><i class="ion-android-close toast_close_icon"></i></span><span ng-bind-html="ionicToast.toastMessage"></span></div></div>';t.put("ionic-toast/templates/ionic-toast.html",n)}]);
/*
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

/*
 * Configurable variables. You may need to tweak these to be compatible with
 * the server-side, but the defaults work in most cases.
 */
var hexcase = 0;
/* hex output format. 0 - lowercase; 1 - uppercase        */
var b64pad = "";
/* base-64 pad character. "=" for strict RFC compliance   */
var chrsz = 8;
/* bits per input character. 8 - ASCII; 16 - Unicode      */

/*
 * These are the functions you'll usually want to call
 * They take string arguments and return either hex or base-64 encoded strings
 */
function hex_md5(s) {
    return binl2hex(core_md5(str2binl(s), s.length * chrsz));
}
function b64_md5(s) {
    return binl2b64(core_md5(str2binl(s), s.length * chrsz));
}
function str_md5(s) {
    return binl2str(core_md5(str2binl(s), s.length * chrsz));
}
function hex_hmac_md5(key, data) {
    return binl2hex(core_hmac_md5(key, data));
}
function b64_hmac_md5(key, data) {
    return binl2b64(core_hmac_md5(key, data));
}
function str_hmac_md5(key, data) {
    return binl2str(core_hmac_md5(key, data));
}

/*
 * Perform a simple self-test to see if the VM is working
 */
function md5_vm_test() {
    return hex_md5("abc") == "900150983cd24fb0d6963f7d28e17f72";
}

/*
 * Calculate the MD5 of an array of little-endian words, and a bit length
 */
function core_md5(x, len) {
    /* append padding */
    x[len >> 5] |= 0x80 << ((len) % 32);
    x[(((len + 64) >>> 9) << 4) + 14] = len;

    var a = 1732584193;
    var b = -271733879;
    var c = -1732584194;
    var d = 271733878;

    for (var i = 0; i < x.length; i += 16) {
        var olda = a;
        var oldb = b;
        var oldc = c;
        var oldd = d;

        a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);
        d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
        c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
        b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
        a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
        d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
        c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
        b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
        a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
        d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
        c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
        b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
        a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
        d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
        c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
        b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);

        a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
        d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
        c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
        b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);
        a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
        d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
        c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
        b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
        a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
        d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
        c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
        b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
        a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
        d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
        c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
        b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);

        a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
        d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
        c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
        b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
        a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
        d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
        c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
        b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
        a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
        d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);
        c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
        b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
        a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
        d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
        c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
        b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);

        a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);
        d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
        c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
        b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
        a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
        d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
        c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
        b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
        a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
        d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
        c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
        b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
        a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
        d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
        c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
        b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);

        a = safe_add(a, olda);
        b = safe_add(b, oldb);
        c = safe_add(c, oldc);
        d = safe_add(d, oldd);
    }
    return Array(a, b, c, d);

}

/*
 * These functions implement the four basic operations the algorithm uses.
 */
function md5_cmn(q, a, b, x, s, t) {
    return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
}
function md5_ff(a, b, c, d, x, s, t) {
    return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
}
function md5_gg(a, b, c, d, x, s, t) {
    return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
}
function md5_hh(a, b, c, d, x, s, t) {
    return md5_cmn(b ^ c ^ d, a, b, x, s, t);
}
function md5_ii(a, b, c, d, x, s, t) {
    return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
}

/*
 * Calculate the HMAC-MD5, of a key and some data
 */
function core_hmac_md5(key, data) {
    var bkey = str2binl(key);
    if (bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);

    var ipad = Array(16), opad = Array(16);
    for (var i = 0; i < 16; i++) {
        ipad[i] = bkey[i] ^ 0x36363636;
        opad[i] = bkey[i] ^ 0x5C5C5C5C;
    }

    var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
    return core_md5(opad.concat(hash), 512 + 128);
}

/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */
function safe_add(x, y) {
    var lsw = (x & 0xFFFF) + (y & 0xFFFF);
    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
    return (msw << 16) | (lsw & 0xFFFF);
}

/*
 * Bitwise rotate a 32-bit number to the left.
 */
function bit_rol(num, cnt) {
    return (num << cnt) | (num >>> (32 - cnt));
}

/*
 * Convert a string to an array of little-endian words
 * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.
 */
function str2binl(str) {
    var bin = Array();
    var mask = (1 << chrsz) - 1;
    for (var i = 0; i < str.length * chrsz; i += chrsz)
        bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << (i % 32);
    return bin;
}

/*
 * Convert an array of little-endian words to a string
 */
function binl2str(bin) {
    var str = "";
    var mask = (1 << chrsz) - 1;
    for (var i = 0; i < bin.length * 32; i += chrsz)
        str += String.fromCharCode((bin[i >> 5] >>> (i % 32)) & mask);
    return str;
}

/*
 * Convert an array of little-endian words to a hex string.
 */
function binl2hex(binarray) {
    var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
    var str = "";
    for (var i = 0; i < binarray.length * 4; i++) {
        str += hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8 + 4)) & 0xF) +
            hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8  )) & 0xF);
    }
    return str;
}

/*
 * Convert an array of little-endian words to a base-64 string
 */
function binl2b64(binarray) {
    var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    var str = "";
    for (var i = 0; i < binarray.length * 4; i += 3) {
        var triplet = (((binarray[i >> 2] >> 8 * ( i % 4)) & 0xFF) << 16)
            | (((binarray[i + 1 >> 2] >> 8 * ((i + 1) % 4)) & 0xFF) << 8 )
            | ((binarray[i + 2 >> 2] >> 8 * ((i + 2) % 4)) & 0xFF);
        for (var j = 0; j < 4; j++) {
            if (i * 8 + j * 6 > binarray.length * 32) str += b64pad;
            else str += tab.charAt((triplet >> 6 * (3 - j)) & 0x3F);
        }
    }
    return str;
}

angular.module('starter.services', [])
	.filter('bankItem', function() {
		return function(input) {
			// input = "************"+input.substr(12)
			var array = input.replace(/(.{4})(?=.)/g, "$1 ");
			return array;
		}
	})
	.filter('phoneHide', function() {
		return function(input) {
			if(input == null) return '';
			var array = input.substr(0, 3) + '****' + input.substr(7, 4);
			return array;
		}
	})
	.filter('timeOut', function() {
		return function(input) {
			if(input == null) return '';
			var array = Math.floor(input/86400000) + '天' + Math.floor((input%86400000)/3600000) +'小时'+ Math.floor((input%3600000)/60000) + '分'+ Math.floor((input%60000)/1000) +'秒';
//			var array = input.substr(0, 3) + '****' + input.substr(7, 4);
			return array;
		}
	})
	.factory('cordovaPlug', ["toast", function(toast) {
		$cordovaPlugreturn = {
			CommonPL: function(success, functionName, parameter) {
				try {
					cordova.exec(function(data) {
						success instanceof Function && success(data);
					}, $cordovaPlugreturn.CommonPLError, "CommonPL", functionName, parameter);
				} catch(e) {}
			},
			CommonPLError: function(error) {
				toast.show(error)
			}
		};
		return $cordovaPlugreturn;
	}])
	.factory('toast', ["ionicToast", function(ionicToast) {
		// 静默消息
		$toast = {
			show: function(message) {
				ionicToast.show(message, 'bottom', false, 2000)
			}
		};
		return $toast;
	}])
	.factory('Common', ["$http", "$location", "$ionicLoading", "$ionicPopup", "toast", "cordovaPlug", "$state", "$rootScope", "$timeout", "actionSheetItem", function($http, $location, $ionicLoading, $ionicPopup, toast, cordovaPlug, $state, $rootScope, $timeout, actionSheetItem) {
		var app_url = 'https://life.365gl.com/',
			debug_url = 'http://106.14.187.133:8090/',
			mock_url = '',
			ClientVer = '1.0.0',
			url_overtime = 30000,
			isDebug = true, //是否开启测试
			isAleart = false, //被挤下线弹框提醒
			isError = false,

			$return = {
				app_url: isDebug ? debug_url : app_url,
				ClientVer: ClientVer,
				isDebug: isDebug,
				setUrl: function(_url) {
					$return.app_url = _url;
				},
				showLoading: function() {
					var myTimer = 5000;
					$ionicLoading.show({
						content: 'Loading',
						animation: 'fade-in',
						showBackdrop: true,
						template: '<div id="gl_loading" class="spinnere"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div>',
						duration: myTimer
					});
				},
				hideLoading: function() {
					$ionicLoading.hide();
				},
				showAlert: function(title, template, then, okText) {
					if(!isError) {
						var okText = okText || '我知道了';
						isError = true;
						var alertPopup = $ionicPopup.alert({
							template: template,
							okText: okText,
							okType: 'button-light'
						});
						alertPopup.then(function(res) {
							isError = false;
							then instanceof Function && then(res);
						});
					}
					setTimeout(function() {
						isError = false;
					}, 3000)
				},
				showConfirm: function(title, template, ok, cancel, okText, cancelText) {
					if(!isAleart) {
						isAleart = true;
						var confirmPopup = $ionicPopup.confirm({
							template: template,
							buttons: [{
								text: cancelText || '取消',
								type: 'button-light',
								onTap: function(e) {
									isAleart = false;
									cancel instanceof Function && cancel();
								}
							}, {
								text: okText || '确定',
								type: 'button-light',
								onTap: function(e) {
									isAleart = false;
									ok instanceof Function && ok();
								}
							}]
						});
					}
					setTimeout(function() {
						isAleart = false;
					}, 3000)
				},
				setCache: function($key, $value, $expire) {
					var object = {
						value: $value,
						timestamp: $expire && (parseInt($expire) + new Date().getTime()) || '0'
					};
					localStorage.setItem($key, JSON.stringify(object));
				},
				getCache: function($key) {
					var cache = localStorage.getItem($key);
					if(cache) {
						var object = JSON.parse(localStorage.getItem($key)),
							dateString = object.timestamp,
							now = new Date().getTime().toString();
						if(dateString != '0' && now > dateString) {
							localStorage.removeItem($key);
							return null;
						}
						return object.value;
					} else return null;
				},
				clearCache: function($key) {
					localStorage.removeItem($key);
				},
				logout: function() {
					$return.clearCache('Token');
					$return.clearCache('information');
					$return.clearCache('balanceNum');
					$return.clearCache('hasClickBalance');
					$return.clearCache('bankList');
					$return.clearCache('bannerImg');
				},
				//解析地址参数
				getQueryString: function(url, name) {
					var query = url.substring(1);
					var vars = query.split("&");
					for(var i = 0; i < vars.length; i++) {
						var pair = vars[i].split("=");
						if(pair[0] == name) {
							return pair[1];
						}
					}
					return(false);
				},
				//生成uuid
				uuid: function() {
					return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
						var r = Math.random() * 16 | 0,
							v = c == 'x' ? r : (r & 0x3 | 0x8);
						return v.toString(16);
					});
				},
				//MD5加密算法
        checkMd5: function(_string, success) {
            var data = {
                'MD5': hex_md5(_string.toString())
            }
            if (success) {
                success instanceof Function && success(data);
            } else {
                return data.MD5;
            }
            return;
        },
				get: function(url, data, success, error, loading) {
					/*if (!$return.isnetwork()) {
					  $return.showAlert('温馨提示', "网络连接错误，请检查网络连接");
					  return;
					}*/
					if(loading != undefined) $return.showLoading();
					console.time('请求时间：');
					data = data instanceof Object && data || {};
					var authUser = '',
						authPasswd = '',
						urlOther = '';
					if($return.getCache('Token') != null) {
						authUser = $return.getCache('Token').authUser;
						authPasswd = $return.getCache('Token').authPasswd;
						urlOther = $return.getCache('Token').url;
					}
					newHttp();

					function newHttp() {
						$http({
							method: 'get',
							url: $return.app_url + urlOther + url,
							params: data,
							headers: {
								"authUser": authUser,
								"authPasswd": authPasswd
							},
							timeout: url_overtime
						}).then(function successCallback(data) {
							console.timeEnd('请求时间：');
							data = data.data;
							if(data.state == "1") success instanceof Function && success(data);
							else {
								$return.showAlert('温馨提示', data.msg, function() {
									$return.hideLoading();
								});
							}
							if(loading != undefined) $return.hideLoading();
						}, function errorCallback(data) {
							if(loading != undefined) $return.hideLoading();
							data && data.msg ? $return.showAlert('温馨提示', data.msg) : $return.showAlert('温馨提示', "网络连接错误，请稍后再试！");
							error instanceof Function && error(data);
						});
					}
				},
				post: function(url, data, success, error, loading) {
					/*if (!$return.isnetwork()) {
					  $return.showAlert('温馨提示', "网络连接错误，请检查网络连接");
					  return;
					}*/
					if(loading != undefined) $return.showLoading();
					var myToken = '';
					console.time('请求时间：');
					data = data instanceof Object && data || {};
					var authUser = '',
						authPasswd = '',
						urlOther = '';
					if($return.getCache('Token') != null) {
						authUser = $return.getCache('Token').authUser;
						authPasswd = $return.getCache('Token').authPasswd;
						urlOther = $return.getCache('Token').url;
					}
					newHttp();

					function newHttp() {
						$http({
							method: 'post',
							url: $return.app_url + urlOther + url,
							data: data,
							headers: {
								"authUser": authUser,
								"authPasswd": authPasswd
							},
							timeout: url_overtime
						}).then(function successCallback(data) {
							console.timeEnd('请求时间：');
							data = data.data;
							if(data.state == "1") success instanceof Function && success(data);
							else $return.showAlert('温馨提示', data.msg, function() {
								$return.hideLoading();
							});
							if(loading != undefined) $return.hideLoading();
						}, function errorCallback(data) {
							if(loading != undefined) $return.hideLoading();
							data && data.msg ? $return.showAlert('温馨提示', data.msg) : $return.showAlert('温馨提示', "网络连接错误，请稍后再试！");
							error instanceof Function && error(data);
						});
					}
				},
				post_send: function() {
					var authUser = '',authPasswd = '';
					if($return.getCache('Token') != null) {
						authUser = $return.getCache('Token').authUser;
						authPasswd = $return.getCache('Token').authPasswd;
					}
					newHttp();
					function newHttp() {
						$http({
							method: 'post',
							url: $return.app_url + 'interfaces/home/user/sendAliveState',
							data: {
								type: 3,
								authUser: authUser,
								authPasswd: authPasswd
							},
							headers: {
								"authUser": authUser,
								"authPasswd": authPasswd
							},
							timeout: url_overtime
						}).then(function successCallback(data) {
							
						}, function errorCallback(data) {
							
						});
					}
				}
			}
		return $return;
	}])
	.factory('actionSheetItem', ["$document", "$compile", "$rootScope", "$timeout", "$http", "$templateCache", "$state", "cordovaPlug", "$ionicModal", function($document, $compile, $rootScope, $timeout, $http, $templateCache, $state, cordovaPlug, $ionicModal) {
		var body = $document.find('body'),
			container

		function close() {
			container.removeClass('active')
			$timeout(function() {
				container.remove()
			}, 250)
		}

		function show(bak) {
			$timeout(function() {
				container.addClass('active')
				if(bak) bak(container)
			}, 50)
		}
		/*
		 * 举报
		 * confirmButton  确认文字
		 * confirm 成功回调函数
		 * cancel 取消回调函数
		 * items 选项列表
		 * */
		function showChoose(option) {
			var items = option.items,
				chooseItem = [],
				confirmButton = option.confirmButton ? option.confirmButton : '确认';
			container = angular.element('<div id="tab_store_action-sheet-container"></div>')
			body.append(container);

			var $scope = $rootScope.$new();
			$scope.choose = function() {
				container.removeClass('active')
				$timeout(function() {
					container.remove()
				}, 250)
				if(option.confirm) option.confirm(chooseItem)
			}
			$scope.select = function(i, e) {
				if(angular.element(e.target).hasClass('selected')) {
					angular.element(e.target).removeClass('selected')
					chooseItem.splice(chooseItem.indexOf(i), 1)
				} else {
					angular.element(e.target).addClass('selected')
					chooseItem.push(i)
				}
			}
			$scope.cancel = function(i, e) {
				close()
				if(option.cancel) option.cancel(chooseItem)
			}

			var html = '<div><div class="bg" ng-click="cancel()"></div><div class="box"><div class="items-box">'
			for(var i = 0; i < items.length; i++) {
				html += '<span ng-click="select(' + i + ',$event)">' + items[i] + '</span>'
			}
			html += '</div><div class="options"><a class="confirm" href="javascript:void(0)" ng-click="choose()">' + confirmButton + '</a></div></div></div>'
			html = $compile(html)($scope);
			container.append(html)
			show()
		}
		//显示电话号码 tel 电话号码
		function showTel(tel) {
			container = angular.element('<div id="tab_store_action-sheet-container"></div>')
			body.append(container);
			var $scope = $rootScope.$new();
			$scope.cancel = function(i, e) {
				close()
			}
			$scope.call = function(i, e) {
				cordovaPlug.CommonPL(function() {
					//隐藏拨打弹框
				}, "telephone", [tel])
				close()
			}
			var html = '<div><div class="bg" ng-click="cancel()"></div><div class="box tel-box"><div class="items-box">'
			html += '<span ng-click="call()">' + tel + '</span>'
			html += '</div><div class="options">' +
				'<a class="cancel" href="javascript:void(0)" ng-click="cancel()">取消</a></div></div></div>'
			html = $compile(html)($scope);
			container.append(html)
			show()
		}
		//显示支付完成页面
		function successPay(_num) {
			container = angular.element('<div id="tab_store_action-sheet-container"></div>')
			body.append(container);
			var $scope = $rootScope.$new();
			$scope.cancel = function(i, e) {
				close()
			}
			$scope.call = function(i, e) {
				close();
			}
			var html = '<div ng-click="call()"><div class="bg" ng-click="call()"></div><div class="popbox cjc_paybg"><img src="img/pay/close-btn.png" style="position: absolute;width: 0.8rem;height: 0.8rem;top:7.4rem;" alt=""><img src="img/hdqImg/@2xweep.png" alt=""><div class="cjc_pay_tip"><div class="colorff f32 tc">支付成功，您己获得' + _num + '乐豆</div><div class="tc f24 colorff cjc_pay_moretip">乐豆可在任何合作商店消费相当于' + _num + '元现金</div></div></div></div>'
			html = $compile(html)($scope);
			container.append(html)
			show()
		}
		//显示银行卡更换
		function changeBank(data, index, success) {
			container = angular.element('<div id="tab_store_action-sheet-container"></div>')
			body.append(container);
			var $scope = $rootScope.$new();
			$scope.cancel = function(i, e) {
				close()
			}
			$scope.serverSideChange = function(e) {
				success instanceof Function && success(e);
				close();
			}
			$scope.data = data;
			$scope.index = index;
			var html = '<div><div class="bg" ng-click="cancel()"></div><div class="box bankBox p0-24">'
			html += '<div class="cjc_bank_title bor-bot">选择优先支付方式</div><div class="cjc_bank_tip">优先使用所选支付方式付款，如付款失败将尝试使用其他支付方式完成付款</div>';
			html += '<div class="banklist"><ion-radio ng-repeat="item in data"  class="cjc_banklist f32 color33 bor-bot"  ' +
				'ng-value="item.value" ng-click="serverSideChange(item)" ' +
				'ng-if="item.color != undefined" ng-class="{true:\'active\',false:\'\'}[index==item.cardIndex]"> <img ng-src="{{item.bankImg}}" ' +
				'alt=""><span>{{item.bankName}}</span><span>{{item.cardType =="C" && " 信用卡" || " 储蓄卡"}}</span>' +
				' <span>({{item.cardNo.substr(-4,4)}})</span></ion-radio><div class="cjc_height"></div></div></div>'
			html = $compile(html)($scope);
			container.append(html)
			show()
		}
		//暂停使用二维码弹框
		function showMadal(instructions, stopfunction) {
			container = angular.element('<div id="tab_store_action-sheet-container"></div>')
			body.append(container);
			var $scope = $rootScope.$new();
			$scope.cancel = function(i, e) {
				close()
			}
			$scope.stop = function(i, e) {
				stopfunction instanceof Function && stopfunction();
				close()
			}
			$scope.call = function(i, e) {
				instructions instanceof Function && instructions();
				close()
			}
			var html = '<div><div class="bg" ng-click="cancel()"></div><div class="box tel-box"><div class="items-box" ng-click="call()">'
			html += '<span style="color:#333;">使用说明</span></div><div class="items-box" ng-click="stop()"><span>暂停使用</span></div>'
			html += '<div class="options" ng-click="cancel()">' +
				'<a class="cancel" href="javascript:void(0)">取消</a></div></div></div>'
			html = $compile(html)($scope);
			container.append(html)
			show()
		}
		//显示未实名认证的
		function showAuthentication(init) {
			container = angular.element('<div id="tab_store_action-sheet-container"></div>')
			body.append(container);
			var $scope = $rootScope.$new();
			$scope.cancel = function(i, e) {
				close()
			}
			$scope.gotoCertification = function(i, e) {
				init instanceof Function && init();
				close()
			}
			var html = '<div class="bg" ng-click="cancel()"></div>'
			html += '<div class="cjc_showalert f28 box"><div class="cjc_alert_padding"><p class="success_1 bor-bot">完善资料<span ng-click="cancel()" class="err_img2"><i class="icon ion-close-round"></i></span></p> <div class="color66">尊敬的用户，为了您更好的体验给乐生活，请先去完成实名认证！</div></div><div class="df"><div class="df1" ng-click="gotoCertification()">马 上 认 证</div></div>'
			html = $compile(html)($scope);
			container.append(html)
			show();
		}
		/*
		 * 仿madal弹框
		 * scope 作用域
		 * templateUrl 模板地址
		 * template  模板文本
		 * success  插入好回调函数，参数：container(插入的节点对象)
		 * */
		function showPage(option) {
			var html = angular.element('<div class="box page-box"></div>')
			container = angular.element('<div id="tab_store_action-sheet-container"></div>')
			body.append(container);
			container.append(html);
			option.scope.cancel = function(i, e) {
				close()
				option.scope.closeModal()
			}
			if(option.template) {
				var page = $compile(option.template)(option.scope);
				html.append(page)
				show(option.success)
				return
			}
			$http.get(option.templateUrl, {
					cache: $templateCache
				})
				.then(function(response) {
					var page = $compile(response.data)(option.scope);
					html.append(page)
					show(option.success)

				});

		}

		return {
			showChoose: showChoose,
			showTel: showTel,
			showPage: showPage,
			showMadal: showMadal,
			showAuthentication: showAuthentication,
			changeBank: changeBank,
			successPay: successPay,
			close: close
		}
	}])
	.directive('uiCheckSref', ["$state", "Common", "commonConfigsJson", function($state, Common, commonConfigsJson) {
		return {
			restrict: 'A',
			require: ['?^uiSrefActive', '?^uiSrefActiveEq'],
			link: function(scope, element, $attr, uiSrefActive) {
				var ref = parseStateRef($attr['uiCheckSref']),
					state = ref.state,
					param = scope.$eval(ref.paramExpr)
				if(ref.paramExpr) {
					scope.$watch(ref.paramExpr, function(val$$1) {
						param = val$$1;
					}, true);
				}

				function parseStateRef(ref) {
					var paramsOnly = ref.match(/^\s*({[^}]*})\s*$/),
						parsed;
					if(paramsOnly)
						ref = '(' + paramsOnly[1] + ')';
					parsed = ref.replace(/\n/g, " ").match(/^\s*([^(]*?)\s*(\((.*)\))?\s*$/);
					if(!parsed || parsed.length !== 4)
						throw new Error("Invalid state ref '" + ref + "'");
					return {
						state: parsed[1] || null,
						paramExpr: parsed[3] || null
					};
				}
				element.on('click', function() {
					console.log(Common.isDebug)
					if(!commonConfigsJson.isApp || Common.isDebug) {
						$state.go(state, param);
						return
					}
					Common.isNetwordConnected(function() {
						$state.go(state, param);
					})
				})
			}
		}
	}])
var twoArr = function(){
		console.time('testForEach');
		var myArr = [];
		for(i=0;i<4;i++){
			for(j=i+1;j<4;j++){
				for(n=0;n<10;n++){
					for(m=0;m<10;m++){
						var newArr = [n.toString(),m.toString()];
						newArr.splice(i,0,"x");
						newArr.splice(j,0,"x");
						myArr.push(newArr);
					}
				}
			}
		}
		console.timeEnd('testForEach');
		return myArr;
	}
	var threeArr = function(){
		console.time('testForEach');
		var myArr = [];
		for(i=0;i<4;i++){
			for(j=0;j<10;j++){
				for(n=0;n<10;n++){
					for(m=0;m<10;m++){
						var newArr = [j.toString(),n.toString(),m.toString()];
						newArr.splice(i,0,"x");
						myArr.push(newArr);
					}
				}
			}
		}
		console.timeEnd('testForEach');
		return myArr;
	}
	var fourArr = function(){
		console.time('testForEach');
		var myArr = [];
		for(i=0;i<10;i++){
			for(j=0;j<10;j++){
				for(n=0;n<10;n++){
					for(m=0;m<10;m++){
						var newArr = [i.toString(),j.toString(),n.toString(),m.toString()];
						myArr.push(newArr);
					}
				}
			}
		}
		console.timeEnd('testForEach');
		return myArr;
	}
	var allArr = ['0','1','2','3','4','5','6','7','8','9'];
	//数组交集
	var intersection  = function(_arr0,_arr1){
		var newArr = [];
		for(var i = 0; i<_arr0.length; i ++){
			if(_arr1.indexOf(_arr0[i]) != -1) newArr.push(_arr0[i])
		}
		return newArr;
	}
	
	/*
	位数
	type -- 0:二字
		 -- 1：三字
		 --	2：前四
	_qian -- P:排除
	// setWeishu(0,'','P、4、5','x','x')
	*/
	var setWeishu = function(_type,_qian,_bai,_shi,_ge){
		var oldArr = _type == 0 && twoArr() || _type == 1 && threeArr() || fourArr();
		var myArrLen = oldArr.length;
		var qian = _qian == '' && allArr || _qian.toString().split('、');
		var bai = _bai == '' && allArr || _bai.toString().split('、');;
		var shi = _shi == '' && allArr || _shi.toString().split('、');
		var ge = _ge == '' && allArr || _ge.toString().split('、');
		var newArr = []
		for(i = 0;i<myArrLen; i++){
			if((qian[0] == 'P' ? qian.indexOf(oldArr[i][0]) == -1 : qian.indexOf(oldArr[i][0]) != -1) && 
				(bai[0] == 'P' ? bai.indexOf(oldArr[i][1]) == -1 : bai.indexOf(oldArr[i][1]) != -1) && 
				(shi[0] == 'P' ? shi.indexOf(oldArr[i][2]) == -1 : shi.indexOf(oldArr[i][2]) != -1) && 
				(ge[0] == 'P' ? ge.indexOf(oldArr[i][3]) == -1 : ge.indexOf(oldArr[i][3]) != -1) ){
				newArr.push(oldArr[i].join(''))
			}
		}
		return newArr
	}
	var getArr = function(_arr){
		var chooseArr = []
		for(var o = 0; o < 4; o++){
			if(_arr.indexOf(o.toString()) == -1) chooseArr.push(o.toString())
		}
		return chooseArr
	}
	/*
	合数
	type -- 0:二字
		 -- 1：三字
		 --	2：前四
	_structure -- 结构，X所在的引索位置
	_choose  -- 合数位置，用于计算合数的数值所在的引索位置
	_sum  -- 合数尾数（P排除）
	setHeshu(1,'2','0、1','P、1、5')
	*/
	var setHeshu = function(_type,_structure,_choose,_sum){
		var oldArr = _type == 0 && twoArr() || _type == 1 && threeArr() || fourArr();
		var myArrLen = oldArr.length;
		var structure = _structure == '' ? [] : _structure.split('、');
		var choose = _choose == '' ? getArr(structure) : _choose.split('、');
		var sum = _sum.split('、');
		var newArr = [];
		all:
		for(i = 0;i<myArrLen; i++){
			for(x = 0; x < structure.length; x++){
				if(oldArr[i][structure[x]] != 'x') continue all;
			}
			var newSum = 0;
			for(j =0 ;j<choose.length;j++){
				if(oldArr[i][choose[j]] == 'x') continue all;
				newSum += Number(oldArr[i][choose[j]])
			}
			newSum = newSum%10;
			if(sum[0] == 'P' && sum.indexOf(newSum.toString()) == -1){
				newArr.push(oldArr[i].join(''))
			}else if(sum[0] != 'P' && sum.indexOf(newSum.toString()) != -1){
				newArr.push(oldArr[i].join(''))
			}
		}
		return newArr;
		
	}
	/*
	值数
	type -- 0:二字
		 -- 1：三字
		 --	2：前四
	_structure -- 结构，X所在的引索位置
	_choose  -- 合数位置，用于计算合数的数值所在的引索位置
	_sum  -- 合数尾数（P排除）
	setZhishu(1,'2','0、1','P、1、5')
	*/
	var setZhishu = function(_type,_structure,_choose,_sum){
		var oldArr = _type == 0 && twoArr() || _type == 1 && threeArr() || fourArr();
		var myArrLen = oldArr.length;
		var structure = _structure == '' ? [] : _structure.split('、');
		var choose = _choose == '' ? getArr(structure) : _choose.split('、');
		var sum = _sum.split('、');
		var newArr = [];
		all:
		for(i = 0;i<myArrLen; i++){
			for(x = 0; x < structure.length; x++){
				if(oldArr[i][structure[x]] != 'x') continue all;
			}
			var newSum = 0;
			for(j =0 ;j<choose.length;j++){
				if(oldArr[i][choose[j]] == 'x'){
					newSum = '';
					break;
				} 
				newSum += Number(oldArr[i][choose[j]])
			}
			if(sum[0] == 'P' && sum.indexOf(newSum.toString()) == -1){
				newArr.push(oldArr[i].join(''))
			}else if(sum[0] != 'P' && sum.indexOf(newSum.toString()) != -1){
				newArr.push(oldArr[i].join(''))
			}
		}
		return newArr
	}

	/*
	对数
	type -- 0:二字
		 -- 1：三字
		 --	2：前四
	_structure -- 结构，X所在的引索位置
	_choose  -- 对数位置，用于计算对数的数值所在的引索位置
	_sum  -- （P排除）
	setDuishu(1,'2','0、1','P')
	*/
	
	var setDuishu = function(_type,_structure,_choose,_sum){
		var oldArr = _type == 0 && twoArr() || _type == 1 && threeArr() || fourArr();
		var myArrLen = oldArr.length;
		var structure = _structure == '' ? [] : _structure.split('、');
		var choose = _choose == '' ? getArr(structure) : _choose.split('、');
		var sum = _sum.split('、');
		var newArr = [];
		if(choose.length < 2){
			return newArr;
		}
		all:
		for(i = 0;i<myArrLen; i++){
			for(x = 0; x < structure.length; x++){
				if(oldArr[i][structure[x]] != 'x') continue all;
			}
			var newSum = 0;
			var newSumArr = [];
			for(j =0 ;j<choose.length;j++){
				if(oldArr[i][choose[j]] != 'x'){
					newSumArr.push(oldArr[i][choose[j]])
				}
			}
			if(newSumArr.length == choose.length){
				newSumArr.sort().reverse();
				for(var m = 0 ; m < newSumArr.length; m++){
					for(var n = m+1; n < newSumArr.length; n++){
						if(newSumArr[m] - newSumArr[n] == 5) newSum++;
					}
				}
				if(sum[0] != 'P' && newSum != 0){
					newArr.push(oldArr[i].join(''))
				}else if(sum[0] == 'P' && newSum == 0){
					newArr.push(oldArr[i].join(''))
				}
			}
		}
		return newArr
	}
	/*
	全倒
	type -- 0:二字
		 -- 1：三字
		 --	2：前四
	_structure -- 结构，X所在的引索位置
	_sum  -- 全倒数字
	_paichu -- P -排除
	setQuandao(1,'0','0、1','P')
	*/
	var setQuandao = function(_type,_structure,_sum,_paichu){
		var oldArr = _type == 0 && twoArr() || _type == 1 && threeArr() || fourArr();
		var myArrLen = oldArr.length;
		var structure = _structure == '' ? [] : _structure.split('、');
		var newArr = [];
		all:
		for(i = 0;i<myArrLen; i++){
			for(x = 0; x < structure.length; x++){
				if(oldArr[i][structure[x]] != 'x') continue all;
			}
			var sum = _sum.split('、');
			if(sum.length < _type+2){
				return newArr;
			}
			var l = 0;
			for(var m = 0; m<4;m++){
				if(oldArr[i][m] != 'x' && sum.indexOf(oldArr[i][m]) != -1){
					l++;
					sum.splice(sum.indexOf(oldArr[i][m]),1)
				}
			}
			if(l == _type+2 && _paichu != "P") newArr.push(oldArr[i].join(''))
			else if(l != _type+2 &&_paichu == "P") newArr.push(oldArr[i].join(''))
		}
		return newArr
	}

	/*
	双重
	type -- 0:二字
		 -- 1：三字
		 --	2：前四
	_structure -- 结构，X所在的引索位置
	_choose  -- 双重位置，用于计算双重所在的引索位置
	_sum  -- （P排除）
	setShuangchong(1,'2','0、1、3','')
	*/
	
	var setShuangchong = function(_type,_structure,_choose,_sum){
		var oldArr = _type == 0 && twoArr() || _type == 1 && threeArr() || fourArr();
		var myArrLen = oldArr.length;
		var structure = _structure == '' ? [] : _structure.split('、');
		var choose = _choose == '' ? getArr(structure) : _choose.split('、');
		var sum = _sum.split('、');
		var newArr = [];
		
		if(choose.length < 2){
			return newArr;
		}

		all:
		for(i = 0;i<myArrLen; i++){
			for(x = 0; x < structure.length; x++){
				if(oldArr[i][structure[x]] != 'x') continue all;
			}
			var h = 0;
			for(j =0 ;j<choose.length;j++){
				for(m = j+1; m < choose.length;m++){
					if(oldArr[i][choose[j]] == oldArr[i][choose[m]]) h++;
				}
			}
			if(h == 0 && _sum == "P") newArr.push(oldArr[i].join(''))
			else if(h != 0 && _sum != "P") newArr.push(oldArr[i].join(''))
		}
		return newArr
	}
	/*
	几兄弟
	type -- 0:二字
		 -- 1：三字
		 --	2：前四
	_structure -- 结构，X所在的引索位置
	_choose  -- 兄弟位置，用于计算几兄弟所在的引索位置
	_sum  -- （P排除）
	_type0 -- (2\3\4  几兄弟)
	setxiongdi(0,'2、3','0、1',',2)
	*/
	
	var setxiongdi = function(_type,_structure,_choose,_sum,_type0){
		var oldArr = _type == 0 && twoArr() || _type == 1 && threeArr() || fourArr();
		// oldArr = [["1", "x", "1", "2"]]
		var myArrLen = oldArr.length;
		var structure = _structure == '' ? [] : _structure.split('、');
		var choose = _choose == '' ? getArr(structure) : _choose.split('、');
		var sum = _sum.split('、');
		var newArr = [];
		
		if((choose.length < 2 && _type0 == 2 )|| (choose.length < 3 && _type0 == 3)){
			return newArr;
		}
		all:
		for(i = 0;i<myArrLen; i++){
			for(x = 0; x < structure.length; x++){
				if(oldArr[i][structure[x]] != 'x') continue all;
			}
			var h = 0;
			if(_type0 == 2){
				
				if(oldArr[i][choose[0]]-1 == oldArr[i][choose[1]]  ||
					 oldArr[i][choose[0]] == oldArr[i][choose[1]]-1 ||
					 oldArr[i][choose[0]]-9 == oldArr[i][choose[1]]  ||
					 oldArr[i][choose[0]] == oldArr[i][choose[1]]-9) h++;
			}else if(_type0 == 3){
				if((oldArr[i][choose[0]] == oldArr[i][choose[1]]-1 && oldArr[i][choose[1]]-1 == oldArr[i][choose[2]]-2)||
					(oldArr[i][choose[0]] == oldArr[i][choose[1]]-2 && oldArr[i][choose[1]]-2 == oldArr[i][choose[2]]-1) ||
					(oldArr[i][choose[0]]-1 == oldArr[i][choose[1]] && oldArr[i][choose[1]] == oldArr[i][choose[2]]-2 )||
					(oldArr[i][choose[0]]-1 == oldArr[i][choose[1]]-2 && oldArr[i][choose[1]]-2 == oldArr[i][choose[2]]) ||
					(oldArr[i][choose[0]]-2 == oldArr[i][choose[1]] && oldArr[i][choose[1]] == oldArr[i][choose[2]]-1) ||
					(oldArr[i][choose[0]]-2 == oldArr[i][choose[1]]-1 && oldArr[i][choose[1]]-1 == oldArr[i][choose[2]])) h++;
				if(oldArr[i][choose[0]] == '0'){
					if(((oldArr[i][choose[1]] == '1' || oldArr[i][choose[1]] == '8') && oldArr[i][choose[2]] == '9')||
						((oldArr[i][choose[2]] == '1' || oldArr[i][choose[2]] == '8') && oldArr[i][choose[1]] == '9')) h++
				}
				if(oldArr[i][choose[1]] == '0'){
					if(((oldArr[i][choose[0]] == '1' || oldArr[i][choose[0]] == '8') && oldArr[i][choose[2]] == '9')||
						((oldArr[i][choose[2]] == '1' || oldArr[i][choose[2]] == '8') && oldArr[i][choose[0]] == '9')) h++
				}
				if(oldArr[i][choose[2]] == '0'){
					if(((oldArr[i][choose[1]] == '1' || oldArr[i][choose[1]] == '8') && oldArr[i][choose[0]] == '9')||
						((oldArr[i][choose[0]] == '1' || oldArr[i][choose[0]] == '8') && oldArr[i][choose[1]] == '9')) h++
				}
			}
			else if(_type0 == 4){
				if((oldArr[i][choose[0]] == oldArr[i][choose[1]]-1 && oldArr[i][choose[0]] == oldArr[i][choose[2]]-2  && oldArr[i][choose[0]] == oldArr[i][choose[3]]-3) ||
					(oldArr[i][choose[0]] == oldArr[i][choose[1]]-1 && oldArr[i][choose[0]] == oldArr[i][choose[2]]-3  && oldArr[i][choose[0]] == oldArr[i][choose[3]]-2) ||
					(oldArr[i][choose[0]] == oldArr[i][choose[1]]-2 && oldArr[i][choose[0]] == oldArr[i][choose[2]]-1  && oldArr[i][choose[0]] == oldArr[i][choose[3]]-3) || 
					(oldArr[i][choose[0]] == oldArr[i][choose[1]]-2 && oldArr[i][choose[0]] == oldArr[i][choose[2]]-3  && oldArr[i][choose[0]] == oldArr[i][choose[3]]-1) || 
					(oldArr[i][choose[0]] == oldArr[i][choose[1]]-3 && oldArr[i][choose[0]] == oldArr[i][choose[2]]-1  && oldArr[i][choose[0]] == oldArr[i][choose[3]]-2) || 
					(oldArr[i][choose[0]] == oldArr[i][choose[1]]-3 && oldArr[i][choose[0]] == oldArr[i][choose[2]]-2  && oldArr[i][choose[0]] == oldArr[i][choose[3]]-1) || 

					(oldArr[i][choose[0]]-1 == oldArr[i][choose[1]] && oldArr[i][choose[0]]-1 == oldArr[i][choose[2]]-2  && oldArr[i][choose[0]]-1 == oldArr[i][choose[3]]-3) || 
					(oldArr[i][choose[0]]-1 == oldArr[i][choose[1]] && oldArr[i][choose[0]]-1 == oldArr[i][choose[2]]-3  && oldArr[i][choose[0]]-1 == oldArr[i][choose[3]]-2) || 
					(oldArr[i][choose[0]]-1 == oldArr[i][choose[1]]-2 && oldArr[i][choose[0]]-1 == oldArr[i][choose[2]]  && oldArr[i][choose[0]]-1 == oldArr[i][choose[3]]-3) || 
					(oldArr[i][choose[0]]-1 == oldArr[i][choose[1]]-2 && oldArr[i][choose[0]]-1 == oldArr[i][choose[2]]-3  && oldArr[i][choose[0]]-1 == oldArr[i][choose[3]]) || 
					(oldArr[i][choose[0]]-1 == oldArr[i][choose[1]]-3 && oldArr[i][choose[0]]-1 == oldArr[i][choose[2]]  && oldArr[i][choose[0]]-1 == oldArr[i][choose[3]]-2) || 
					(oldArr[i][choose[0]]-1 == oldArr[i][choose[1]]-3 && oldArr[i][choose[0]]-1 == oldArr[i][choose[2]]-2  && oldArr[i][choose[0]]-1 == oldArr[i][choose[3]]) || 

					(oldArr[i][choose[0]]-2 == oldArr[i][choose[1]] && oldArr[i][choose[0]]-2 == oldArr[i][choose[2]]-1  && oldArr[i][choose[0]]-2 == oldArr[i][choose[3]]-3) || 
					(oldArr[i][choose[0]]-2 == oldArr[i][choose[1]] && oldArr[i][choose[0]]-2 == oldArr[i][choose[2]]-3  && oldArr[i][choose[0]]-2 == oldArr[i][choose[3]]-1) || 
					(oldArr[i][choose[0]]-2 == oldArr[i][choose[1]]-1 && oldArr[i][choose[0]]-2 == oldArr[i][choose[2]]  && oldArr[i][choose[0]]-2 == oldArr[i][choose[3]]-3) || 
					(oldArr[i][choose[0]]-2 == oldArr[i][choose[1]]-1 && oldArr[i][choose[0]]-2 == oldArr[i][choose[2]]-3  && oldArr[i][choose[0]]-2 == oldArr[i][choose[3]]) || 
					(oldArr[i][choose[0]]-2 == oldArr[i][choose[1]]-3 && oldArr[i][choose[0]]-2 == oldArr[i][choose[2]]  && oldArr[i][choose[0]]-2 == oldArr[i][choose[3]]-1) || 
					(oldArr[i][choose[0]]-2 == oldArr[i][choose[1]]-3 && oldArr[i][choose[0]]-2 == oldArr[i][choose[2]]-1  && oldArr[i][choose[0]]-2 == oldArr[i][choose[3]]) || 

					(oldArr[i][choose[0]]-3 == oldArr[i][choose[1]] && oldArr[i][choose[0]]-3 == oldArr[i][choose[2]]-1  && oldArr[i][choose[0]]-3 == oldArr[i][choose[3]]-2) || 
					(oldArr[i][choose[0]]-3 == oldArr[i][choose[1]] && oldArr[i][choose[0]]-3 == oldArr[i][choose[2]]-2  && oldArr[i][choose[0]]-3 == oldArr[i][choose[3]]-1) || 
					(oldArr[i][choose[0]]-3 == oldArr[i][choose[1]]-1 && oldArr[i][choose[0]]-3 == oldArr[i][choose[2]]  && oldArr[i][choose[0]]-3 == oldArr[i][choose[3]]-2) || 
					(oldArr[i][choose[0]]-3 == oldArr[i][choose[1]]-1 && oldArr[i][choose[0]]-3 == oldArr[i][choose[2]]-2  && oldArr[i][choose[0]]-3 == oldArr[i][choose[3]]) || 
					(oldArr[i][choose[0]]-3 == oldArr[i][choose[1]]-2 && oldArr[i][choose[0]]-3 == oldArr[i][choose[2]]  && oldArr[i][choose[0]]-3 == oldArr[i][choose[3]]-1) || 
					(oldArr[i][choose[0]]-3 == oldArr[i][choose[1]]-2 && oldArr[i][choose[0]]-3 == oldArr[i][choose[2]]-1  && oldArr[i][choose[0]]-3 == oldArr[i][choose[3]])) h++;

				var four = [['0','1','2','9'],['0','1','8','9'],['0','7','8','9']]
				for(m = 0; m < four.length; m++){
					var n = 0;
					for(j =0 ;j<choose.length;j++){
						var newNum = four[m].indexOf(oldArr[i][choose[j]]);
						if(newNum != -1){
							n++;
							four[m].splice(newNum,1);
						}
					}
					if(n == 4) h++
					
				}
			}
			if(h == 0 && _sum == "P") newArr.push(oldArr[i].join(''))
			else if(h != 0 && _sum != "P") newArr.push(oldArr[i].join(''))
			
		}
		return newArr
	}
	/*
	二字联动
	_arr -- 联动数组
	type -- 2:二字操盘
		 -- 3：三字操盘
		 --	4：前四操盘
	*/
	var erziLiandong = function(_arr,_type){
		var newArr = []
		for(var i = 0 ;i < _arr.length; i++){
			if(_type == 3){
				for(var j = 0 ; j < 4; j++){
					var numArr = _arr[i].split('');
					if(numArr[j] != 'x'){
						numArr[j] = 'x';
						if(newArr.indexOf(numArr.join('')) == -1) newArr.push(numArr.join(''))
					}
				}
			}else if(_type == 4){
				for(var j = 0 ; j < 4; j++){
					var numArr = _arr[i].split('');
					numArr[j] = 'x';
					for(var m = j; m < 4; m++){
						if(numArr[m] != 'x'){
							var oldNum = numArr[m];
							numArr[m] = 'x';
							if(newArr.indexOf(numArr.join('')) == -1)  newArr.push(numArr.join(''))
							numArr[m] = oldNum;
						}
					}
				}
			}
			
		}
		return newArr;
	}
	/*
	三字联动
	_arr -- 联动数组
	type -- 2:二字操盘
		 -- 3：三字操盘
		 --	4：前四操盘
	*/
	var sanziLiandong = function(_arr,_type){
		var newArr = [];
		for(var i = 0 ;i < _arr.length; i++){
			if(_type == 2){
				for(var j = 0; j < 4; j++){
					var numArr = _arr[i].split('');
					for(var m= 0; m < 10; m++){
						if(numArr[j] == 'x'){
							numArr[j] = m;
							if(newArr.indexOf(numArr.join('')) == -1) newArr.push(numArr.join(''))
							numArr[j] = 'x';
						}
					}
				}
			}else if(_type == 4){
				for(var j = 0 ; j < 4; j++){
					numArr = _arr[i].split('');
					if(numArr[j] != 'x'){
						numArr[j] = 'x';
						if(newArr.indexOf(numArr.join('')) == -1) newArr.push(numArr.join(''))
					}
				}
			}
		}
		return newArr;
	}
	/*
	前四联动
	_arr -- 联动数组
	type -- 2:二字操盘
		 -- 3：三字操盘
		 --	4：前四操盘
	*/
	var qiansiLiandong = function(_arr,_type){
		var newArr = [];
		for(var i = 0 ;i < _arr.length; i++){
			if(_type == 2){
				for(var m = 0; m < 10; m++){
					for(var n = 0; n < 10; n++){
						var numArr = _arr[i].replace(/x/,m);
						var numArr0 = numArr.replace(/x/,n);
						if(newArr.indexOf(numArr0) == -1) newArr.push(numArr0);
					}
				}
			}else if(_type == 3){
				for(var m = 0; m < 10; m++){
					var numArr = _arr[i].replace(/x/,m);
					if(newArr.indexOf(numArr) == -1) newArr.push(numArr);
				}
			}
		}
		return newArr;
	}
Number.prototype.to_Fixed = function(len) {
     var add = 0;
     var s, temp;
     var s1 = this + "";
     var start = s1.indexOf(".");
     if (s1.substr(start + len + 1, 1) >= 5) add = 1;
     var temp = Math.pow(10, len);
     s = Math.floor(this * temp) + add;
     return s / temp;
};

var index_baobiao_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.index_baobiao', {
        url: '/index_baobiao',
        views: {
            'tab-index': {
                templateUrl: 'component/index_baobiao/index_baobiao.html',
                controller: 'index_baobiaoCtrl'
            }
        }
    });
};
index_baobiao_myConfig.$inject = ["$stateProvider"];
myapp.config(index_baobiao_myConfig);

angular.module('starter.index_baobiao',[])
.controller('index_baobiaoCtrl', ["$scope", "Common", "$timeout", "$ionicScrollDelegate", function($scope,Common,$timeout,$ionicScrollDelegate) {
    $scope.changeClick = function(_num){
        $scope.type = _num;
        $scope.curr = 1;
        $scope.list = [];
        $scope.can_loadmore = false;
      	$scope.loadMore();
        $ionicScrollDelegate.scrollTop();
    }
    $scope.loadMore = function(){
    	$scope.can_loadmore = false;
    	Common.post('sheet/getList',{
    		type : $scope.type,
    		pageIndex : $scope.curr,
    		pageSize : 20
    	},function(data){
    		$scope.list = $scope.list.concat(data.body.list);
    		$scope.curr ++;
    		$timeout(function(){
    			$scope.can_loadmore = $scope.curr <= Math.ceil(data.body.total/20)
    		},3000)
    		
    		$scope.$broadcast('scroll.infiniteScrollComplete');
    	},{},0)
    }
    $scope.$on('$ionicView.beforeEnter', function() {
        $scope.type = 1;
        $scope.curr = 1;
        $scope.list = [];
        $scope.loadMore();
    });
}]);

var index_agency_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.index_agency', {
        url: '/index_agency/:id',
        views: {
            'tab-index': {
                templateUrl: 'component/index_agency/index_agency.html',
                controller: 'index_agencyCtrl'
            }
        }
    });
};
index_agency_myConfig.$inject = ["$stateProvider"];
myapp.config(index_agency_myConfig);

angular.module('starter.index_agency',[])
.controller('index_agencyCtrl', ["$scope", "$stateParams", "$state", "Common", function($scope,$stateParams,$state,Common) {
    $scope.gotoAdd = function(){

        if($scope.type != 0) return;
        $state.go('tab.index_addagency',{id:'0'})
    }
    $scope.getList = function(){
    	Common.post('agent/gettList',{
        	agentId : $stateParams.id == 0 ? -1 : $stateParams.id,
        	account : $scope.user.account,
        	name : $scope.user.name
        },function(data){
        	$scope.list = data.body;
        },{},0)
    }
    $scope.submit = function(){
    	if($scope.user.name == '' && $scope.user.account == ''){
    		Common.showAlert('','请输入查询条件！')
    		return;
    	}
    	$scope.getList();
    }
    $scope.setStatus = function(_id,_state,_index){
    	var myText = _state == 1 ? '确定停用？' : '确定启用？';
    	Common.showConfirm('',myText,function(){
    		Common.post('agent/setState',{
	    		id : _id,
	    		state : _state == 1 ? 2 : 1
	    	},function(data){
	    		$scope.list[_index].state = _state == 1 ? 2 : 1;
	    	},{},0)
    	})
    	
    }
    //进入下级
    $scope.gotoDetail = function(_id,_num){
    	if(_num == 0) return;
    	$state.go('tab.index_agency',{
    		id:_id
    	})
    }
    $scope.$on('$ionicView.beforeEnter', function() {
        $scope.type = $stateParams.id;
        $scope.addText = $stateParams.id == 0 ? '新增' : '';
        $scope.user = {
        	name : '',
        	account : ''
        }
        $scope.getList();
    });
}]);

var index_oldstateDetailmore_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.index_oldstateDetailmore', {
        url: '/index_oldstateDetailmore/:id/:start/:end',
        views: {
            'tab-index': {
                templateUrl: 'component/index_oldstateDetailmore/index_oldstateDetailmore.html',
                controller: 'index_oldstateDetailmoreCtrl'
            }
        }
    });
};
index_oldstateDetailmore_myConfig.$inject = ["$stateProvider"];
myapp.config(index_oldstateDetailmore_myConfig);

angular.module('starter.index_oldstateDetailmore',[])
.controller('index_oldstateDetailmoreCtrl', ["$scope", "$stateParams", "Common", "$timeout", "$ionicScrollDelegate", "$state", function($scope,$stateParams,Common,$timeout,$ionicScrollDelegate,$state) {
    $scope.changeClick = function(_num){
        $scope.type = _num;
        $scope.curr = 1;
        $scope.list = [];
        $scope.can_loadmore = false;
      	$scope.loadMore();
        $ionicScrollDelegate.scrollTop();
    }
    //进入详情
    $scope.gotoDetail = function(_num,_id){
//  	ui-sref="tab.index_oldstateDetail({id:'0',agentIds:item.total.agentId,beginNumberId:user.startTime,endNumberId:user.endTime,type:type})"
		$state.go('tab.index_oldstateDetail',{
			id:_num,
			agentIds:_id,
			beginNumberId:$stateParams.start,
			endNumberId:$stateParams.end,
			type:$scope.type
		})
    }
    //获取二级列表
    $scope.loadMore = function(){
    	$scope.can_loadmore = false;
    	Common.post('historySheet/getList',{
    			agentId : $stateParams.id,
    			beginNumberId : $stateParams.start,
	        	endNumberId : $stateParams.end,
	        	type : $scope.type,
	    		pageIndex : $scope.curr,
	    		pageSize : 100
    	},function(data){
    		$scope.list = $scope.list.concat(data.body.list);
    		$scope.allList = data.body.summary;
    		$scope.curr ++;
    		$timeout(function(){
    			$scope.can_loadmore = $scope.curr <= Math.ceil(data.body.total/100)
    		},3000)
    		
    		$scope.$broadcast('scroll.infiniteScrollComplete');
    	},{},0)
    }
    $scope.$on('$ionicView.beforeEnter', function() {
        $scope.type = 1;
        $scope.curr = 1;
        $scope.list = [];
        $scope.can_loadmore = false;
      	$scope.loadMore();
      	$ionicScrollDelegate.scrollTop();
    });
}]);

var index_oldstateDetail_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.index_oldstateDetail', {
        url: '/index_oldstateDetail/{:id,:agentIds,:beginNumberId,:endNumberId,:type}',
        views: {
            'tab-index': {
                templateUrl: 'component/index_oldstateDetail/index_oldstateDetail.html',
                controller: 'index_oldstateDetailCtrl'
            }
        }
    });
};
index_oldstateDetail_myConfig.$inject = ["$stateProvider"];
myapp.config(index_oldstateDetail_myConfig);

angular.module('starter.index_oldstateDetail',[])
.controller('index_oldstateDetailCtrl', ["$scope", "$stateParams", "Common", "$timeout", "$ionicScrollDelegate", function($scope,$stateParams,Common,$timeout,$ionicScrollDelegate) {
    $scope.showTimeClick = function(){
        $scope.showTime = !$scope.showTime;
    }
    //获取数据
    $scope.loadMore = function(){
    	$scope.can_loadmore = false;
    	var myText = $stateParams.id == 0 ? 'historySheet/getBettingDetail' : 'historySheet/getResultList'
    	Common.post(myText,{
    			agentIds : [$stateParams.agentIds],
    			beginNumberId : $stateParams.beginNumberId,
	        	endNumberId : $stateParams.endNumberId,
	        	type : $stateParams.type,
	    		pageIndex : $scope.curr,
	    		pageSize : 20
    	},function(data){
    		$scope.list = $scope.list.concat(data.body.list);
    		$scope.curr ++;
    		$timeout(function(){
    			$scope.can_loadmore = $scope.curr <= Math.ceil(data.body.total/20)
    		},3000)
    		$scope.$broadcast('scroll.infiniteScrollComplete');
    	},{},0)
    }
    $scope.$on('$ionicView.beforeEnter', function() {
        $scope.showTime = false;
        $scope.id = $stateParams.id;
        $scope.title = $stateParams.id == 0 ? "历史报表详情" : '彩金表';
        $scope.curr = 1;
        $scope.list = [];
        $scope.can_loadmore = false;
      	$scope.loadMore();
      	$ionicScrollDelegate.scrollTop();
    });
}]);

var index_addagency_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.index_addagency', {
        url: '/index_addagency/:id',
        views: {
            'tab-index': {
                templateUrl: 'component/index_addagency/index_addagency.html',
                controller: 'index_addagencyCtrl'
            }
        }
    });
};
index_addagency_myConfig.$inject = ["$stateProvider"];
myapp.config(index_addagency_myConfig);

angular.module('starter.index_addagency',[])
.controller('index_addagencyCtrl', ["$scope", "$stateParams", "Common", function($scope,$stateParams,Common) {
    $scope.checkout = function(){
    	if($scope.user.account == ''){
    		Common.showAlert('','名称不能为空！');
    		return;
    	}
    	Common.post('agent/checkAccount',{
    		account : $scope.user.account
    	},function(data){
    		if(data.body.exist) Common.showAlert('','此帐号已被占用！');
    		else Common.showAlert('','此帐号可用！');
    	},{},0)
    }
    //获取操作详情
    $scope.getList = function(){
    	Common.post('agent/detail',{
    		id : $stateParams.id
    	},function(data){
    		$scope.user = data.body;
    		$scope.user = {
    			account : data.body.account,
    			name: data.body.name,
				passwd: data.body.passwd,
				credit: data.body.credit,
				profitTwo: data.body.profitTwo.toString(),
				profitThree: data.body.profitThree.toString(),
				profitFour: data.body.profitFour.toString(),
				interceptTwo: data.body.interceptTwo.toString(),
				interceptThree: data.body.interceptThree.toString(),
				interceptFour: data.body.interceptFour.toString(),
				createTime : data.body.createTime
	        }
    		console.log($scope.user)
    		$scope.passwd = data.body.passwd;
    	},{},0)
    }
    //保存
    $scope.checkPass = function(_input){
	    var regx =/^(?!([a-zA-Z]+|\d+)$)[a-zA-Z\d]{6,20}$/;
	    var regx1 =/([a-zA-Z]+?)/g;
	    if(_input.match(regx)!=null&&_input.match(regx1)!=null &&_input.match(regx1).length >1) return true;
	    else return false;
	}
    $scope.save = function(){
    	var newTip = $scope.user.account == '' && '账号不能为空，新增不成功！' 
//	    			|| $scope.user.account.length != 4 && '账号必须为4个字符，新增不成功！'
	                || $scope.user.name == '' && '名称不能为空，新增不成功！'
	                || $scope.user.passwd == '' && '密码不能为空，新增不成功！'
	                || !$scope.checkPass($scope.user.passwd) && '密码至少为6个字符，并至少包含两个字母。修改失败！'
	                || $scope.user.credit == '' && '信用额度不能为空，新增不成功！'
	                || ! /^[0-9]+$/.test($scope.user.credit) && '信用额度只能是数字，新增不成功！'
	                || ''
	    if(newTip != ''){
	      Common.showAlert('',newTip,0)
	      return;
	    }
    	var postUrl = $stateParams.id == 0 ? 'agent/add' : 'agent/modify';
    	if($scope.passwd != $scope.user.passwd) $scope.user.passwd = Common.checkMd5($scope.user.passwd);
    	Common.post(postUrl,$scope.user,function(data){
    		Common.showAlert('','保存成功！');
    	},{},0)
    }
    //密码
    $scope.getFoucs = function(){
    	if($scope.passwd == $scope.user.passwd) $scope.user.passwd = '';
    }
    $scope.$on('$ionicView.beforeEnter', function() {
        $scope.type = $stateParams.id;
        $scope.title = $stateParams.id == 0 ? '新增代理' : '代理详情';
        
        Common.post('agent/getInitData',{},function(data){
        	$scope.initData = data.body;
        	$scope.user = {
	        	account: "",
				name: "",
				passwd: "",
				credit: "",
				profitTwo: data.body.prifitList[0],
				profitThree: data.body.prifitList[0],
				profitFour: data.body.prifitList[0],
				interceptTwo: data.body.interceptList[0],
				interceptThree: data.body.interceptList[0],
				interceptFour: data.body.interceptList[0],
	        }
        	if($stateParams.id != 0) $scope.getList();
        },{},0)
    });
}]);

var index_Statement_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.index_Statement', {
        url: '/index_Statement/:id/:type',
        views: {
            'tab-index': {
                templateUrl: 'component/index_Statement/index_Statement.html',
                controller: 'index_StatementCtrl'
            }
        }
    });
};
index_Statement_myConfig.$inject = ["$stateProvider"];
myapp.config(index_Statement_myConfig);

angular.module('starter.index_Statement',[])
.controller('index_StatementCtrl', ["$scope", "$stateParams", "Common", "$timeout", "$state", function($scope,$stateParams,Common,$timeout,$state) {
	$scope.gotoDetail = function(_boo,_agentId){
		$state.go('tab.index_statementdetail',{
			isSelf:_boo ? 0 : 1,
			id : $stateParams.id,
			agentId : _agentId,
			type : $stateParams.type
		})
	}
	$scope.loadMore = function(){
    	$scope.can_loadmore = false;
    	Common.post('sheet/getAgentListByNumber',{
    		numberId : $stateParams.id,
    		type : $stateParams.type,
    		agentId : -1,
    		pageIndex : $scope.curr,
    		pageSize : 20
    	},function(data){
    		$scope.list = $scope.list.concat(data.body.list);
    		$scope.curr ++;
    		$timeout(function(){
    			$scope.can_loadmore = $scope.curr <= Math.ceil(data.body.total/20)
    		},3000)
    		
    		$scope.$broadcast('scroll.infiniteScrollComplete');
    	},{},0)
    }
    $scope.$on('$ionicView.beforeEnter', function() {
		$scope.curr = 1;
        $scope.list = [];
        $scope.loadMore();
    });
}]);

var index_oldstatement_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.index_oldstatement', {
        url: '/index_oldstatement',
        views: {
            'tab-index': {
                templateUrl: 'component/index_oldstatement/index_oldstatement.html',
                controller: 'index_oldstatementCtrl'
            }
        }
    });
};
index_oldstatement_myConfig.$inject = ["$stateProvider"];
myapp.config(index_oldstatement_myConfig);

angular.module('starter.index_oldstatement',[])
.controller('index_oldstatementCtrl', ["$scope", "Common", "$ionicScrollDelegate", "$timeout", function($scope,Common,$ionicScrollDelegate,$timeout) {
    $scope.showFirst = true;
    $scope.list = [];
    $scope.submitClick = function(){
        $scope.showFirst = false;
        $scope.loadMore();
    }

    $scope.changeClick = function(_num){
        $scope.type = _num;
        $scope.curr = 1;
        $scope.list = [];
        $scope.can_loadmore = false;
      	$scope.loadMore();
        $ionicScrollDelegate.scrollTop();
    }
    //获取一级列表
    $scope.loadMore = function(){
    	$scope.can_loadmore = false;
    	Common.post('historySheet/getFirstList',{
    		beginNumberId : $scope.user.startTime,
        	endNumberId : $scope.user.endTime,
        	type : $scope.type,
    		pageIndex : $scope.curr,
    		pageSize : 20
    	},function(data){
    		$scope.list = $scope.list.concat(data.body.list);
    		$scope.curr ++;
    		$timeout(function(){
    			$scope.can_loadmore = $scope.curr <= Math.ceil(data.body.total/20)
    		},3000)
    		
    		$scope.$broadcast('scroll.infiniteScrollComplete');
    	},{},0)
    }

    $scope.showTimeClick = function(){
        $scope.showTime = !$scope.showTime;
    }
    //返回
    $scope.gotoBack = function(){
        if(!$scope.showFirst) {
            $scope.user = {
                startTime : $scope.numberList[0].numberId,
                endTime : $scope.numberList[0].numberId
            }
            $scope.showFirst = true;
            return;
        }
        window.history.back();
    }

    $scope.$on('$ionicView.beforeEnter', function() {
        $scope.showTime = false;
        $scope.type = 1;
        $scope.curr = 1;
        
        $scope.user = {
            startTime : '',
            endTime : ''
        }
        //获取期号
        Common.post('historySheet/getNumberList',{},function(data){
        	$scope.numberList = data.body;
        	$scope.user = {
	            startTime : data.body[0].numberId,
	            endTime : data.body[0].numberId
	        }
        	console.log($scope.user)
        })
    });
}]);

var index_statementdetail_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.index_statementdetail', {
        url: '/index_statementdetail/{:isSelf,:id,:agentId,:type}',
        views: {
            'tab-index': {
                templateUrl: 'component/index_statementdetail/index_statementdetail.html',
                controller: 'index_statementdetailCtrl'
            }
        }
    });
};
index_statementdetail_myConfig.$inject = ["$stateProvider"];
myapp.config(index_statementdetail_myConfig);

angular.module('starter.index_statementdetail',[])
.controller('index_statementdetailCtrl', ["$scope", "$stateParams", "Common", "$timeout", function($scope,$stateParams,Common,$timeout) {
    $scope.showTimeClick = function(){
        $scope.showTime = !$scope.showTime;
    }
    $scope.getNumber = function(){
    	$scope.allArr = [];
    	var num = 0;
    	for(var i in $scope.list){
    		var newAll = [];
    		for(var l in $scope.list[i].group.dataList){
    			num ++;
    			newAll.push(num)
    		}
    		$scope.allArr.push(newAll)
    	}
    }
    $scope.showMess = function(_index){
        if($scope.type == 1) return;
        Common.showAlert('组合条件',$scope.list[_index].group.rule)
    }
    //全选
    $scope.chooseAll = function(){
    	for(var i in $scope.list){
    		for(var l in $scope.list[i].group.dataList){
    			if($scope.show.allChoose) $scope.list[i].group.dataList[l].choose = true;
    			else $scope.list[i].group.dataList[l].choose = false;
    		}
    	}
    }
    //撤单
    $scope.reset = function(){
    	var newArr = [];
    	for(var i in $scope.list){
    		for(var l in $scope.list[i].group.dataList){
    			if($scope.list[i].group.dataList[l].choose) newArr.push($scope.list[i].group.dataList[l].id);
    		}
    	}
    	if(newArr.length == 0){
    		Common.showAlert('','请选择撤单号码！')
    		return;
    	}
    	Common.post('order/cancelOrder',{
    		ids: newArr.join(',')
    	},function(data){
    		$scope.curr = 0;
    		$scope.list = [];
    		$scope.loadMore();
    	},{},0)
    }
    $scope.loadMore = function(){
    	$scope.can_loadmore = false;
    	Common.post('sheet/getBettingDetail',{
    		numberId : $stateParams.id,
    		agentId : $stateParams.agentId,
    		type : $stateParams.type,
    		pageIndex : $scope.curr,
    		pageSize : 20
    	},function(data){
    		$scope.list = $scope.list.concat(data.body.list);
    		$scope.getNumber();
    		$scope.curr ++;
    		$timeout(function(){
    			$scope.can_loadmore = $scope.curr <= Math.ceil(data.body.total/20)
    		},3000)
    		
    		$scope.$broadcast('scroll.infiniteScrollComplete');
    	},{},0)
    }
    $scope.$on('$ionicView.beforeEnter', function() {
        $scope.showTime = false;
        $scope.type = $stateParams.isSelf;
        $scope.curr = 1;
        $scope.list = [];
        $scope.loadMore();
        $scope.show = {
        	allChoose : false
        }
        $scope.numberId = $stateParams.id;
    });
}]);

var index_withdrawalDetail_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.index_withdrawalDetail', {
        url: '/index_withdrawalDetail/:id',
        views: {
            'tab-index': {
                templateUrl: 'component/index_withdrawalDetail/index_withdrawalDetail.html',
                controller: 'index_withdrawalDetailCtrl'
            }
        }
    });
};
index_withdrawalDetail_myConfig.$inject = ["$stateProvider"];
myapp.config(index_withdrawalDetail_myConfig);

angular.module('starter.index_withdrawalDetail',[])
.controller('index_withdrawalDetailCtrl', ["$scope", "$stateParams", "Common", function($scope,$stateParams,Common) {
    $scope.showTimeClick = function(){
        $scope.showTime = !$scope.showTime;
    }
    $scope.$on('$ionicView.beforeEnter', function() {
        $scope.showTime = false;
        Common.post('sheet/getCancelOrderList',{
        	numberId : $stateParams.id
        },function(data){
        	$scope.list = data.body;
        },{},0)
    });
}]);

var mine_dailiDetail_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.mine_dailiDetail', {
        url: '/mine_dailiDetail/:agentId',
        views: {
            'tab-mine': {
                templateUrl: 'component/mine_dailiDetail/mine_dailiDetail.html',
                controller: 'mine_dailiDetailCtrl'
            }
        }
    });
};
mine_dailiDetail_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_dailiDetail_myConfig);

angular.module('starter.mine_dailiDetail',[])
.controller('mine_dailiDetailCtrl', ["$scope", "$stateParams", "Common", "$timeout", "$ionicScrollDelegate", function($scope,$stateParams,Common,$timeout,$ionicScrollDelegate) {
	$scope.showName = function(){
		$scope.showTime = !$scope.showTime;
	}
	$scope.loadMore = function(){
    	$scope.can_loadmore = false;
    	Common.post('debt/getDebtList',{
    		agentId : $stateParams.agentId,
    		pageIndex : $scope.curr,
    		pageSize : 20
    	},function(data){
    		$scope.list = $scope.list.concat(data.body.list);
    		$scope.curr ++;
    		$timeout(function(){
    			$scope.can_loadmore = $scope.curr <= Math.ceil(data.body.totalCash/20);
    		},3000)
    		
    		$scope.$broadcast('scroll.infiniteScrollComplete');
    	},{},0)
    }
	//删除
	$scope.del = function(){
		var ids = [];
		for(var i in $scope.list){
			if($scope.list[i].choose) ids.push($scope.list[i].id)
		}
		if(ids.length == 0){
			Common.showAlert('','请选定！');
			return;
		}
		Common.showConfirm('','您确定要删除当前选择的序号？',function(){
            Common.post('debt/deleteDebt',{
				ids : ids
			},function(data){
				Common.showAlert('','删除成功！');
				$ionicScrollDelegate.scrollTop();
				$scope.showTime = false;
				$scope.curr = 1;
		        $scope.list = [];
		        $scope.loadMore();
			},{},0)
        },{},'确定','取消')
		
	}
    $scope.$on('$ionicView.beforeEnter', function() {
		$scope.showTime = false;
		$scope.curr = 1;
        $scope.list = [];
        $scope.loadMore();
    });
}]);

var mine_dailiInput_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.mine_dailiInput', {
        url: '/mine_dailiInput',
        views: {
            'tab-mine': {
                templateUrl: 'component/mine_dailiInput/mine_dailiInput.html',
                controller: 'mine_dailiInputCtrl'
            }
        }
    });
};
mine_dailiInput_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_dailiInput_myConfig);

angular.module('starter.mine_dailiInput',[])
.controller('mine_dailiInputCtrl', ["$scope", "Common", "$interval", function($scope,Common,$interval) {
	$scope.changeType = function(_type){
		$scope.type = _type;
		$scope.user.money = ''
	}
	$scope.numClick = function(_num){
    	if(_num == '<' && $scope.user.money == '') return;
        if(_num == '.' && $scope.user.money == ''){
            $scope.user.money = '0.';
        }else if(_num == '.' && $scope.user.money.indexOf('.') != -1){
            return;
        }
        else if(_num == '<' && $scope.user.money != ''){
            $scope.user.money = $scope.user.money.substring(0,$scope.user.money.length -1);
        }
        else if($scope.user.money.split('.').length == 2 && $scope.user.money.split('.')[1].length == 2){
            return;
        }else{
            $scope.user.money = $scope.user.money+_num;
        }
    }
	//保存
	$scope.submitClick = function(){
		if($scope.user.money == '' || $scope.user.money == undefined){
			Common.showAlert('','请输入金额！')
			return;
		}
		if($scope.type == 1 && $scope.user.money> Math.abs($scope.message.cash)){
			Common.showAlert('','代理收款不可大于代理待结帐额！')
			return;
		}
		Common.showConfirm('','<p class="tc">您确定要保存？</p>',function(){
            Common.post('debt/saveRecord',{
				agentId : $scope.message.agentId,
				type : $scope.type,
				cash : $scope.user.money*1000
			},function(data){
				Common.showAlert('','保存成功！')
			},{},0)
        },{},'确定','取消')
		
	}
    $scope.$on('$ionicView.beforeEnter', function() {
    	$scope.type = 2;
    	$scope.bgfoucs = false;
		$scope.message = Common.getCache('dailiSet');
		$scope.user = {
			money : ''
		}
		$scope.newTime = $interval(function(){
            $scope.bgfoucs = !$scope.bgfoucs;
        },1000)
    });
    $scope.$on('$ionicView.beforeLeave', function() {
        $interval.cancel($scope.newTime);
        
    });
}]);

var mine_dailiSet_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.mine_dailiSet', {
        url: '/mine_dailiSet',
        views: {
            'tab-mine': {
                templateUrl: 'component/mine_dailiSet/mine_dailiSet.html',
                controller: 'mine_dailiSetCtrl'
            }
        }
    });
};
mine_dailiSet_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_dailiSet_myConfig);

angular.module('starter.mine_dailiSet',[])
.controller('mine_dailiSetCtrl', ["$scope", "Common", function($scope,Common) {
	//更改状态
	$scope.changeState = function(){
		if($scope.message.debtState == 0 && $scope.user.maxDebt<0){
			Common.showAlert('','待结帐金额必须大于0！')
			return;
		}
		var textmess = $scope.message.debtState == 0 ? '确定启用？' :'确定停用？';
		Common.showConfirm('',textmess,function(){
			Common.post('debt/setDebtState',{
				agentId : $scope.message.agentId,
				state : $scope.message.debtState == 0 ? 1 :0
			},function(data){
				$scope.message.debtState = $scope.message.debtState == 0 ? 1 :0;
			})
		})
	}
	//保存
	$scope.save = function(){
		if($scope.user.maxDebt == '' || $scope.user.maxDebt == undefined){
			Common.showAlert('','请输入待结账金额！')
			return;
		}
		Common.post('debt/saveMaxDebt',{
			agentId : $scope.message.agentId,
			cash : $scope.user.maxDebt*1000
		},function(data){
			Common.showAlert('','保存成功！');
		},{},0)
	}
    $scope.$on('$ionicView.beforeEnter', function() {
		$scope.message = Common.getCache('dailiSet');
		$scope.user={
			maxDebt : $scope.message.maxDebt/1000
		}
    });
}]);

var mine_history_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.mine_history', {
        url: '/mine_history',
        views: {
            'tab-mine': {
                templateUrl: 'component/mine_history/mine_history.html',
                controller: 'mine_historyCtrl'
            }
        }
    });
};
mine_history_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_history_myConfig);

angular.module('starter.mine_history',[])
.controller('mine_historyCtrl', ["$scope", "Common", function($scope,Common) {
    $scope.$on('$ionicView.beforeEnter', function() {
		Common.post('openHistory/getList',{},function(data){
			$scope.list = data.body;
		},{},0)
    });
}]);

var mine_discount_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.mine_discount', {
        url: '/mine_discount',
        views: {
            'tab-mine': {
                templateUrl: 'component/mine_discount/mine_discount.html',
                controller: 'mine_discountCtrl'
            }
        }
    });
};
mine_discount_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_discount_myConfig);

angular.module('starter.mine_discount',[])
.controller('mine_discountCtrl', ["$scope", "Common", function($scope,Common) {
	$scope.save = function(){
		console.log($scope.user)
		Common.post('settings/saveFeedback',$scope.user,function(data){
			Common.showAlert('','保存成功！')
		},{},0)
	}
    $scope.$on('$ionicView.beforeEnter', function() {
		Common.post('settings/getFeedback',{},function(data){
			$scope.list = data.body;
			$scope.user = {
				two : data.body.two,
				three : data.body.three,
				four : data.body.four
			}
		},{},0)
    });
}]);

var mine_dailiIndex_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.mine_dailiIndex', {
        url: '/mine_dailiIndex',
        views: {
            'tab-mine': {
                templateUrl: 'component/mine_dailiIndex/mine_dailiIndex.html',
                controller: 'mine_dailiIndexCtrl'
            }
        }
    });
};
mine_dailiIndex_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_dailiIndex_myConfig);

angular.module('starter.mine_dailiIndex',[])
.controller('mine_dailiIndexCtrl', ["$scope", "Common", "$state", function($scope,Common,$state) {
	$scope.showTime = false;
	$scope.showName = function(){
		$scope.showTime = !$scope.showTime;
	}
	$scope.submit = function(){
		if($scope.user.account == '' && $scope.user.name == ''){
			Common.showAlert('','请输入查询条件！')
			return;
		}
		$scope.getList();
	}
	$scope.getList = function(){
		Common.post('debt/getAgentList',{
			account : $scope.user.account,
			name : $scope.user.name,
			state : -1
		},function(data){
			$scope.list = data.body;
		})
	}
	
	//全选
	$scope.chooseAll = function(){
		for(var i in $scope.list.list){
			$scope.list.list[i].choose = $scope.user.choose;
		}
	}
	//清除
	$scope.clear = function(){
		var agentIds = [];
		for(var i in $scope.list.list){
			if($scope.list.list[i].choose) agentIds.push($scope.list.list[i].agentId);
		}
		if(agentIds.length == 0){
			Common.showAlert('','请选定！');
			return;
		}
		Common.showConfirm('','您确定要对选择的账号进行清零？',function(){
            Common.post('debt/clearAgentDebt',{
				agentIds : agentIds
			},function(data){
				Common.showAlert('','清零成功！',function(){
					$scope.getList();
				})
			},{},0)
        },{},'确定','取消')
		
	}
	//进入设置
	$scope.gotoSet = function(_num){
		Common.setCache('dailiSet',$scope.list.list[_num]);
		$state.go('tab.mine_dailiSet')
	}
	//进入录入
	$scope.gotoInput = function(_num){
		Common.setCache('dailiSet',$scope.list.list[_num]);
		$state.go('tab.mine_dailiInput')
	}
    $scope.$on('$ionicView.beforeEnter', function() {
		$scope.user = {
			account : '',
			name : ''
		}
		$scope.getList();
    });
}]);

var mine_message_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.mine_message', {
        url: '/mine_message',
        views: {
            'tab-mine': {
                templateUrl: 'component/mine_message/mine_message.html',
                controller: 'mine_messageCtrl'
            }
        }
    });
};
mine_message_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_message_myConfig);

angular.module('starter.mine_message',[])
.controller('mine_messageCtrl', ["$scope", "Common", function($scope,Common) {
    $scope.$on('$ionicView.beforeEnter', function() {
		Common.post('myInfo/getInfo',{},function(data){
			$scope.list = data.body;
		},{},0)
    });
}]);

var mine_other_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.mine_other', {
        url: '/mine_other',
        views: {
            'tab-mine': {
                templateUrl: 'component/mine_other/mine_other.html',
                controller: 'mine_otherCtrl'
            }
        }
    });
};
mine_other_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_other_myConfig);

angular.module('starter.mine_other',[])
.controller('mine_otherCtrl', ["$scope", "Common", function($scope,Common) {
    $scope.$on('$ionicView.beforeEnter', function() {
		Common.post('debt/getMyDebt',{},function(data){
			$scope.debt = data.body.debt;
			console.log()
			$scope.showColor = data.body.debt.toString().indexOf('-') == -1 
		},{},0)
    });
}]);

var mine_password_myConfig = function($stateProvider) {
	$stateProvider
		.state('tab.mine_password', {
			url: '/mine_password',
			views: {
				'tab-mine': {
					templateUrl: 'component/mine_password/mine_password.html',
					controller: 'mine_passwordCtrl'
				}
			}
		});
};
mine_password_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_password_myConfig);

angular.module('starter.mine_password', [])
	.controller('mine_passwordCtrl', ["$scope", "$state", "Common", function($scope,$state,Common) {
		$scope.user = {
			oldPass: '',
			newPass: '',
			againPass: ''
		}
		$scope.checkPass = function(_input) {
			var regx = /^(?!([a-zA-Z]+|\d+)$)[a-zA-Z\d]{6,20}$/;
			var regx1 = /([a-zA-Z]+?)/g;
			if(_input.match(regx) != null && _input.match(regx1) != null && _input.match(regx1).length > 1) return true;
			else return false;
		}
		$scope.submit = function() {
			var newTip = $scope.user.oldPass == '' && '请输入原密码' ||
				$scope.user.newPass == '' && '请输入新密码' ||
				$scope.user.againPass == '' && '请再次输入密码' ||
				(!$scope.checkPass($scope.user.oldPass) || !$scope.checkPass($scope.user.newPass) || !$scope.checkPass($scope.user.againPass)) && '密码至少为6个字符，并至少包含两个字母。修改失败！' ||
				$scope.user.oldPass == $scope.user.newPass && '新密码不可与原密码相同，修改失败！' ||
				$scope.user.newPass != $scope.user.againPass && '新旧密码不一致，修改失败！' ||
				''
			if(newTip != '') {
				Common.showAlert('', newTip)
				return;
			}
			Common.post('myInfo/modifyPwd', {
				oldPwd: hex_md5($scope.user.oldPass),
				newPwd: hex_md5($scope.user.newPass)
			}, function(data) {
				Common.showAlert('', '密码修改成功！',function(){
					$state.go('tab.tab_mine')
				})
			})

		}
		$scope.$on('$ionicView.beforeEnter', function() {

		});
	}]);
var mine_pending_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.mine_pending', {
        url: '/mine_pending',
        views: {
            'tab-mine': {
                templateUrl: 'component/mine_pending/mine_pending.html',
                controller: 'mine_pendingCtrl'
            }
        }
    });
};
mine_pending_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_pending_myConfig);

angular.module('starter.mine_pending',[])
.controller('mine_pendingCtrl', ["$scope", "Common", function($scope,Common) {
    $scope.$on('$ionicView.beforeEnter', function() {
        $scope.showTime = false;
        Common.post('debt/getMyDebtList',{},function(data){
        	$scope.list = data.body;
        },{},0)
    });
}]);

var mine_Printing_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.mine_Printing', {
        url: '/mine_Printing',
        views: {
            'tab-mine': {
                templateUrl: 'component/mine_Printing/mine_Printing.html',
                controller: 'mine_PrintingCtrl'
            }
        }
    });
};
mine_Printing_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_Printing_myConfig);

angular.module('starter.mine_Printing',[])
.controller('mine_PrintingCtrl', ["$scope", "Common", "cordovaPlug", function($scope,Common,cordovaPlug) {
	//清空号码
	$scope.cancel = function(){
		var newArr = [];
		for(var i in $scope.list.list){
			newArr.push($scope.list.list[i].id);
		}
		if(newArr.length == 0) return;
		Common.post('order/cancelOrder',{
			ids:newArr.join(',')
		},function(data){
			Common.showAlert('','号码已经清空！')
		},{},0)
	}
	//截屏
	$scope.screen = function(){
//		alert(document.getElementById("cjc_top").offsetTop)
		cordovaPlug.CommonPL(function() {
			Common.showAlert('','截屏成功！');
		}, "clipScreen", [document.getElementById("cjc_top").offsetTop])
	}
	//打印
	$scope.daying = function(){
		var myObj = {
			"title" : $scope.list.game+$scope.list.number+'期【'+$scope.list.openTime+'】',
			"date" : $scope.list.openTime,
			"total" : $scope.list.totalCash,
			"time" : $scope.list.currentTime,
			"list" : []
		}
		for(var i in $scope.list.list){
			var newObj = {
				"serial" : $scope.list.list.length - i,
				"code" : $scope.list.list[i].no,
				"money": $scope.list.list[i].cash,
				"odds": $scope.list.list[i].odds
			}
			myObj.list.push(newObj)
		}
		cordovaPlug.CommonPL(function() {
			
		}, "btPrint", [myObj])
		console.log(myObj.list)
	}
    $scope.$on('$ionicView.beforeEnter', function() {
		Common.post('order/getList',{},function(data){
			$scope.list = data.body;
		},{},0)
    });
}]);

var mine_set_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.mine_set', {
        url: '/mine_set',
        views: {
            'tab-mine': {
                templateUrl: 'component/mine_set/mine_set.html',
                controller: 'mine_setCtrl'
            }
        }
    });
};
mine_set_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_set_myConfig);

angular.module('starter.mine_set',[])
.controller('mine_setCtrl', ["$scope", function($scope) {
    $scope.$on('$ionicView.beforeEnter', function() {

    });
}]);

var mine_setmore_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.mine_setmore', {
        url: '/mine_setmore',
        views: {
            'tab-mine': {
                templateUrl: 'component/mine_setmore/mine_setmore.html',
                controller: 'mine_setmoreCtrl'
            }
        }
    });
};
mine_setmore_myConfig.$inject = ["$stateProvider"];
myapp.config(mine_setmore_myConfig);

angular.module('starter.mine_setmore',[])
.controller('mine_setmoreCtrl', ["$scope", "Common", function($scope,Common) {
	$scope.save = function(){
		Common.post('settings/saveIntercept',$scope.user,function(data){
			Common.showAlert('','保存成功！')
		},{},0)
	}
    $scope.$on('$ionicView.beforeEnter', function() {
		Common.post('settings/getIntercept',{},function(data){
			$scope.user = data.body;
		},{},0)
    });
}]);

var option_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.option', {
        url: '/option',
        views: {
            'tab-index': {
                templateUrl: 'component/option/option.html',
                controller: 'optionCtrl'
            }
        }
    });
};
option_myConfig.$inject = ["$stateProvider"];
myapp.config(option_myConfig);

angular.module('starter.option',[])
.controller('optionCtrl', ["$scope", "Common", "$state", function($scope,Common,$state) {
    $scope.$on('$ionicView.beforeEnter', function() {
		Common.clearCache('Token')
		Common.post('interfaces/home/index/getServers',{},function(data){
			$scope.List = data.body;
		},{})
	  $scope.gotoLogin = function(_url){
		Common.setUrl(_url);
	  	$state.go('tab.tab_login')
	  }
    });
}]);

var tabs_myConfig = function($stateProvider) {
    $stateProvider
        .state('tab', {
            url: '/tab',
            cache: false,
            abstract: true,
            views: {
                'tab': {
                    templateUrl: "component/tabs/tabs.html",
                    controller: "tabCtrl"
                }
            }
        });
};
tabs_myConfig.$inject = ["$stateProvider"];
myapp.config(tabs_myConfig);

angular.module('starter.tabs', [])
    .controller('tabCtrl', ["$scope", "$location", "Common", "$timeout", "$state", "$ionicHistory", "$rootScope", function($scope, $location, Common, $timeout, $state,$ionicHistory,$rootScope) {
        if(!Common.getCache('Token')){
            $state.go('tab.option')
        }else{
            $rootScope.webname =  Common.getCache('Token').site;
        }
        $scope.indexClick = function() {
            window.location.href = "#/tab/tab_index";
        };
        $scope.merchantsClick = function() {
            window.location.href = "#/tab/tab_enter";
        };
        $scope.mineClick = function() {
            window.location.href = "#/tab/tab_mine";
        };

        $scope.gotoTable = function(){
            window.location.href = "#/tab/tab_table";
        }
        $scope.portfolioClick = function(){
            window.location.href = "#/tab/tab_portfolio";
        }
    }]);

var tab_enter_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.tab_enter', {
        url: '/tab_enter',
        views: {
            'tab-enter': {
                templateUrl: 'component/tab_enter/tab_enter.html',
                controller: 'tab_enterCtrl'
            }
        }
    });
};
tab_enter_myConfig.$inject = ["$stateProvider"];
myapp.config(tab_enter_myConfig);

angular.module('starter.tab_enter',[])
.controller('tab_enterCtrl', ["$scope", "$interval", "Common", "$ionicScrollDelegate", function($scope,$interval,Common,$ionicScrollDelegate) {
    //输入框选择
    $scope.focusClick = function(_num){
        $scope.inputType = _num;
    }
    //选择框
    $scope.checkboxClick = function(){
        for(i in $scope.enterDate){
            $scope.enterDate[i].checkbox = $scope.user.allcheckout;
        }
    }
    //清空
    $scope.clearAll = function(){
    	var newArr = []
    	for(i in $scope.enterDate){
            if($scope.enterDate[i].checkbox) newArr.push($scope.enterDate[i].id)
        }
    	if(newArr.length == 0){
    		Common.showAlert('','请选定！');
    		return;
    	}
        Common.post('order/clearOrder',{
        	ids:newArr
        },function(data){
        	$scope.getOrderList();
        },{},0)
    }
    //撤单
    $scope.withdrawal = function(){
        var myArr = []
        for(i in $scope.enterDate){
            if($scope.enterDate[i].checkbox) myArr.push($scope.enterDate[i].id)
        }
        if(myArr.length == 0) Common.showAlert('','请选定！');
        else{
            Common.showConfirm('','确定要撤单？',function(){
                //撤单操作
                Common.post('order/cancelOrder',{
		        	ids:myArr
		        },function(data){
		        	$scope.getOrderList();
		        	Common.showAlert('','撤单成功！')
		        },{},0)
            },function(){

            },'确定','返回')
        }
    }
    $scope.numClick = function(_num){
        if($scope.inputType == 0){
            if(($scope.user.number.length == 4&&_num != '<') || _num == '.') return;
            if(_num == '<' && $scope.user.number == '') return;
            if(_num == '<' && $scope.user.number != ''){
                $scope.user.number = $scope.user.number.substring(0,$scope.user.number.length -1);
            }
            else{
                $scope.user.number = $scope.user.number+_num;
                if($scope.user.number.length == 4){
                    $scope.inputType = 1;
                    //加载赔率
                    Common.post('order/getPrepareBuySingleData',{
                    	no : $scope.user.number
                    },function(data){
                    	$scope.prepareBuySingleData = data.body;
                    })
                }
            }
        }else{
        	if(_num == '<' && $scope.user.money == '') return;
            if($scope.hasSubmit&&_num != 'X'&&_num != '.' &&_num != '<'){
                $scope.user.money = _num.toString();
                $scope.hasSubmit = false;
                return;
            }
            if($scope.user.money.length >= 5 || _num == 'X') return;
            if(_num == '.' && $scope.user.money == ''){
                $scope.user.money = '0.';
            }else if(_num == '.' && $scope.user.money.indexOf('.') != -1){
                return;
            }
            else if(_num == '<' && $scope.user.money != ''){
                $scope.user.money = $scope.user.money.substring(0,$scope.user.money.length -1);
            }
            else if($scope.user.money.split('.').length == 2 && $scope.user.money.split('.')[1].length == 2){
                return;
            }else{
                $scope.user.money = $scope.user.money+_num;
            }
        }
        
    }
    $scope.submitClick = function(){
        if($scope.user.number.length != 4 || ($scope.user.number.indexOf('X')!= -1 && $scope.user.number.match(/X/g).length == 4)){
            Common.showAlert('','号码格式不符！');
            $scope.inputType = 0;
            return
        }
        if($scope.user.money == ''){
            Common.showAlert('','请输入下注金额！');
            return
        }
        if($scope.user.money > $scope.prepareBuySingleData.cash/1000){
            Common.showAlert('','可下注金额不足！');
            return
        }
        Common.post('order/singleOrderNow',{
        	no : $scope.user.number,
        	odds : $scope.prepareBuySingleData.odds,
        	cash : $scope.user.money*1000
        },function(data){
        	var newDate = {
	            id:data.body.id,
	            no:data.body.no,
	            cash:data.body.cash,
	            odds:data.body.odds,
	            checkbox : false
	        }
	        $scope.enterDate.push(newDate);
	        $scope.inputType = 0;
	        $scope.user.number = '';
	        $scope.hasSubmit = true;
	        $ionicScrollDelegate.scrollBottom(true);
        })
        
    }
    $scope.getOrderList = function(){
    	Common.post('order/getList',{},function(data){
        	$scope.orderList = data.body;
        	$scope.enterDate = data.body.list;
        	$ionicScrollDelegate.scrollBottom(true);
        	$scope.newTime = $interval(function(){
	            $scope.bgfoucs = !$scope.bgfoucs;
	            if($scope.orderList.countdown > 0) $scope.orderList.countdown-=1000;
	        },1000)
        	if(data.body.list.length > 30){
        		Common.showAlert('','当前注单条数稍多了，请点“清空”再继续，操作会更快！')
        	}
        },{},0)
    }
    $scope.$on('$ionicView.beforeEnter', function() {
//      $scope.enterDate = Common.getCache('enterDate') || [];
        $scope.bgfoucs = false;
        $scope.inputType = 0;
        $scope.user = {
            number:'',
            money:'',
            allcheckout:false
        }
        $scope.getOrderList();
    });
    $scope.$on('$ionicView.beforeLeave', function() {
        $interval.cancel($scope.newTime);
        
    });
}]);

var tab_index_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.tab_index', {
        url: '/tab_index',
        views: {
            'tab-index': {
                templateUrl: 'component/tab_index/tab_index.html',
                controller: 'tab_indexCtrl'
            }
        }
    });
};
tab_index_myConfig.$inject = ["$stateProvider"];
myapp.config(tab_index_myConfig);

angular.module('starter.tab_index',[])
.controller('tab_indexCtrl', ["$scope", "Common", "$rootScope", function($scope,Common,$rootScope) {
    $scope.$on('$ionicView.beforeEnter', function() {
    	console.log($rootScope.webname)
		Common.post('home/getNewNotice',{},function(data){
			$scope.NewNotice = data.body;
		})
    });
}]);

var tab_login_myConfig = function($stateProvider) {
	$stateProvider
		.state('tab.tab_login', {
			url: '/tab_login',
			hideTab: true,
			views: {
				'tab-index': {
					templateUrl: 'component/tab_login/tab_login.html',
					controller: 'tab_loginCtrl'
				}
			}
		});
};
tab_login_myConfig.$inject = ["$stateProvider"];
myapp.config(tab_login_myConfig);

angular.module('starter.tab_login', [])
	.controller('tab_loginCtrl', ["$scope", "$state", "$stateParams", "Common", "toast", "cordovaPlug", "$timeout", "$rootScope", function($scope, $state, $stateParams, Common, toast, cordovaPlug, $timeout, $rootScope) {
		$scope.gotoLogin = function() {
			$scope.checkPass = function(_input) {
				var regx = /^(?!([a-zA-Z]+|\d+)$)[a-zA-Z\d]{6,20}$/;
				var regx1 = /([a-zA-Z]+?)/g;
				if(_input.match(regx) != null && _input.match(regx1) != null && _input.match(regx1).length > 1) return true;
				else return false;
			}
			var newTip = $scope.user.name == '' && '请输入账号' ||
				$scope.user.password == '' && '请输入密码' ||
				$scope.user.code == '' && '请输入验证码' ||
				!$scope.checkPass($scope.user.password) && '密码至少为6个字符，并至少包含两个字母。登陆失败！' ||
				''
			if(newTip != '') {
				Common.showAlert('', newTip)
				return;
			}
			Common.post('interfaces/home/user/login', {
				account: $scope.user.name,
				passwd: Common.checkMd5($scope.user.password),
				key: $scope.key,
				code: $scope.user.code
			}, function(data) {
				$rootScope.token = data.body;
				data.body.url = 'interfaces/agentPhone/';
				$state.go('tab.tab_index');
				$rootScope.webname = data.body.site;
				Common.setCache('Token', data.body,86400000);
			})
		}
		$scope.$on('$ionicView.beforeEnter', function() {
			$scope.user = {
				name: '',
				password: '',
				code: ''
			}
			Common.post('interfaces/home/index/authCodeKey', {}, function(data) {
				$scope.key = data.body.key;
				Common.post('interfaces/home/index/authCodeImg', {
					key: $scope.key,
					width: '100',
					height: '30'
				}, function(data) {})
			})

		});
	}]);
var tab_mine_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.tab_mine', {
        url: '/tab_mine',
        views: {
            'tab-mine': {
                templateUrl: 'component/tab_mine/tab_mine.html',
                controller: 'tab_mineCtrl'
            }
        }
    });
};
tab_mine_myConfig.$inject = ["$stateProvider"];
myapp.config(tab_mine_myConfig);

angular.module('starter.tab_mine',[])
.controller('tab_mineCtrl', ["$scope", "cordovaPlug", "Common", "$state", function($scope,cordovaPlug,Common,$state) {
    $scope.gotoLogout = function(){
        Common.showConfirm('退出提醒','您是否要退出当前账户？',function(){
            Common.post('myInfo/logout',{},function(data){
                Common.clearCache('Token')
                $state.go("tab.option");
            },{})
        },{},'确定','取消')
        
    }
    $scope.$on('$ionicView.beforeEnter', function() {

    });
}]);

var tab_portfolio_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.tab_portfolio', {
        url: '/tab_portfolio',
        views: {
            'tab-portfolio': {
                templateUrl: 'component/tab_portfolio/tab_portfolio.html',
                controller: 'tab_portfolioCtrl'
            }
        }
    });
};
tab_portfolio_myConfig.$inject = ["$stateProvider"];
myapp.config(tab_portfolio_myConfig);

angular.module('starter.tab_portfolio',[])
.controller('tab_portfolioCtrl', ["$scope", "$interval", "$ionicScrollDelegate", "Common", function($scope,$interval,$ionicScrollDelegate,Common) {
    $scope.weishuArr = [
						[
							[true,true,false,false,'2、3','0、1'],
							[true,false,true,false,'1、3','0、2'],
							[true,false,false,true,'1、2','0、3'],
							[false,true,true,false,'0、3','1、2'],
							[false,true,false,true,'0、2','1、3'],
							[false,false,true,true,'0、1','2、3']
						],[
							[true,true,true,false,'3','0、1、2'],
							[true,true,false,true,'2','0、1、3'],
							[true,false,true,true,'1','0、2、3'],
							[false,true,true,true,'0','1、2、3']
						],[
							[true,true,true,true,'','0、1、2、3']
						]
					]
    $scope.changeClick = function(_num){
        $scope.type =_num;
        $ionicScrollDelegate.scrollTop();
        $scope.reset();
    }
    $scope.typeClick = function(_num){
    	$scope.reset();
    	$ionicScrollDelegate.scrollTop();
        $scope.type0 =_num;
        if(_num == 0) $scope.type = 2;
        else if(_num == 1) $scope.type = 3;
        else $scope.type = 0;
    }
    //关闭键盘
    $scope.close = function(){
        $scope.showKeyword = false;

    }
    //点击输入
    $scope.input = function(name,num,type,$event){
        if(type == 0 && !$scope.user[name]){
        	$scope.inputNum = num;
        	$scope.inputType = type;
        	$scope.inputName = name;
            return;
        }
        $ionicScrollDelegate.scrollBy(0,$event.pageY-240,true)
        $scope.inputNum = num;
        $scope.showKeyword = true;
        $scope.inputType = type;
        $scope.inputName = name;
    }
    $scope.numClick = function(_num){
        if($scope.inputType == 1){
            if(_num == '.' || $scope.user[$scope.inputName].length == 0 && _num == '<' || $scope.user[$scope.inputName].toString().indexOf(_num) != -1 ) return;
            else if(_num == '<' && $scope.user[$scope.inputName] != ''){
            	console.log($scope.user[$scope.inputName])
                $scope.user[$scope.inputName] = $scope.user[$scope.inputName].toString().substring(0,$scope.user[$scope.inputName].length -2);
            }
            else if($scope.user[$scope.inputName].length == 0){
                $scope.user[$scope.inputName] = _num;
            }else{
                $scope.user[$scope.inputName] = $scope.user[$scope.inputName] +'、'+_num;
            }
            return;
        }
        if($scope.inputType == 2){
            if(_num == '.' || ($scope.user[$scope.inputName].length == 0 && _num == '<')) return;
            else if(_num == '<' && $scope.user[$scope.inputName] != ''){
                $scope.user[$scope.inputName] = $scope.user[$scope.inputName].toString().substring(0,$scope.user[$scope.inputName].length -1);
            }
            else if($scope.user[$scope.inputName].length == 0){
                $scope.user[$scope.inputName] = _num;
            }else{
                $scope.user[$scope.inputName] = $scope.user[$scope.inputName] +''+_num;
            }
            return;
        }

        if($scope.user.money.length >= 8 && _num != '<' || $scope.user.money.length == 0 && _num == '<') return;
        if(_num == '.' && $scope.user.money == ''){
            $scope.user.money = '0.';
        }else if(_num == '.' && $scope.user.money.indexOf('.') != -1){
            return;
        }
        else if(_num == '<' && $scope.user.money != ''){
            $scope.user.money = $scope.user.money.toString().substring(0,$scope.user.money.length -1);
        }
        else if($scope.user.money.split('.').length == 2 && $scope.user.money.split('.')[1].length == 2){
            return;
        }else{
            $scope.user.money = $scope.user.money+_num;
        }
    }

    $scope.$on('$ionicView.beforeLeave', function() {
        $interval.cancel($scope.newTime);
    });
	$scope.submitClick = function(){
		if($scope.user.money == ''){
			Common.showAlert('','请输入金额！');
			return;
		}
//		Common.showLoading();
		//位数算法
		if($scope.user.qian != '' || $scope.user.bai != '' || $scope.user.shi != '' || $scope.user.ge != ''){
			var _qian = $scope.weishuArr[$scope.type0][$scope.type][0] ? $scope.user.qian.toString().length>0 && ($scope.user.qianP ? 'P、'+$scope.user.qian : $scope.user.qian) || '' :'x';
			var _bai = $scope.weishuArr[$scope.type0][$scope.type][1] ? $scope.user.bai.toString().length>0 && ($scope.user.baiP ? 'P、'+$scope.user.bai : $scope.user.bai) || '' :'x';
			var _shi = $scope.weishuArr[$scope.type0][$scope.type][2] ? $scope.user.shi.toString().length>0 && ($scope.user.shiP ? 'P、'+$scope.user.shi : $scope.user.shi) || '' :'x';
			var _ge = $scope.weishuArr[$scope.type0][$scope.type][3] ? $scope.user.ge.toString().length>0 && ($scope.user.geP ? 'P、'+$scope.user.ge : $scope.user.ge) || '' :'x';
			$scope.suanfa0 = setWeishu($scope.type0,_qian,_bai,_shi,_ge);
			console.log($scope.suanfa0);
		}
		//合数算法
		if($scope.user.heshu0 != ''){
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var allChoose = 0;
			var _choose = '';
			for(var i in $scope.user.heshuArr0){
				if($scope.user.heshuArr0[i]){
					_choose = _choose+i+'、';
					allChoose++;
				}
			}
			if(allChoose == 0) _choose = $scope.weishuArr[$scope.type0][$scope.type][5];
			else _choose = _choose.substr(0,_choose.length-1);
			var _sum = $scope.user.heshu0P ? 'P、'+$scope.user.heshu0 : $scope.user.heshu0;
			$scope.suanfa1 = setHeshu($scope.type0,_structure,_choose,_sum.toString())
			console.log($scope.suanfa1)
		}
		if($scope.user.heshu1 != ''){
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var allChoose = 0;
			var _choose = '';
			for(var i in $scope.user.heshuArr1){
				if($scope.user.heshuArr1[i]){
					_choose = _choose+i+'、';
					allChoose++;
				}
			}
			if(allChoose == 0) _choose = $scope.weishuArr[$scope.type0][$scope.type][5];
			else _choose = _choose.substr(0,_choose.length-1);
			var _sum = $scope.user.heshu1P ? 'P、'+$scope.user.heshu1 : $scope.user.heshu1;
			$scope.suanfa2 = setHeshu($scope.type0,_structure,_choose,_sum.toString())
			console.log($scope.suanfa2)
		}
		//对数算法
		if($scope.user.duishu0){
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _choose = $scope.weishuArr[$scope.type0][$scope.type][5];
			var _sum = $scope.user.duishu0P ? 'P' : '';
			$scope.suanfa3 = setDuishu($scope.type0,_structure,_choose,_sum);
			console.log($scope.suanfa3)
		}
		
		var duishuArrLength1 = 0;
		var _chooseduishu1 = '';
		for(var i in $scope.user.duishu1){
			if($scope.user.duishu1[i]){
				_chooseduishu1 = _chooseduishu1+i+'、';
				duishuArrLength1++;
			}
		}
		if(duishuArrLength1 > 0){
			_chooseduishu1 = _chooseduishu1.substr(0,_chooseduishu1.length-1);
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _sum = $scope.user.duishu1P ? 'P' : '';
			$scope.suanfa4 = setDuishu($scope.type0,_structure,_chooseduishu1,_sum);
			console.log($scope.suanfa4)
		}
		
		var duishuArrLength2 = 0;
		var _chooseduishu2 = '';
		for(var i in $scope.user.duishu2){
			if($scope.user.duishu2[i]){
				_chooseduishu2 = _chooseduishu2+i+'、';
				duishuArrLength2++;
			}
		}
		if(duishuArrLength2 > 0){
			_chooseduishu2 = _chooseduishu2.substr(0,_chooseduishu2.length-1);
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _sum = $scope.user.duishu2P ? 'P' : '';
			$scope.suanfa5 = setDuishu($scope.type0,_structure,_chooseduishu2,_sum);
			console.log($scope.suanfa5)
		}
		
		//双重算法
		if($scope.user.shuangchong0){
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _choose = $scope.weishuArr[$scope.type0][$scope.type][5];
			var _sum = $scope.user.shuangchong0P ? 'P' : '';
			$scope.suanfa6 = setShuangchong($scope.type0,_structure,_choose,_sum);
			console.log($scope.suanfa6)
		}
		
		var shuangchongLength1 = 0;
		var _chooseshuangchong1 = '';
		for(var i in $scope.user.shuangchong1){
			if($scope.user.shuangchong1[i]){
				_chooseshuangchong1 = _chooseshuangchong1+i+'、';
				shuangchongLength1++;
			}
		}
		if(shuangchongLength1 > 0){
			_chooseshuangchong1 = _chooseshuangchong1.substr(0,_chooseshuangchong1.length-1);
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _sum = $scope.user.shuangchong1P ? 'P' : '';
			$scope.suanfa7 = setShuangchong($scope.type0,_structure,_chooseshuangchong1,_sum);
			console.log($scope.suanfa7)
		}
		
		var shuangchongLength2 = 0;
		var _chooseshuangchong2 = '';
		for(var i in $scope.user.shuangchong2){
			if($scope.user.shuangchong2[i]){
				_chooseshuangchong2 = _chooseshuangchong2+i+'、';
				shuangchongLength2++;
			}
		}
		if(shuangchongLength2 > 0){
			_chooseshuangchong2 = _chooseshuangchong2.substr(0,_chooseshuangchong2.length-1);
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _sum = $scope.user.shuangchong2P ? 'P' : '';
			$scope.suanfa8 = setShuangchong($scope.type0,_structure,_chooseshuangchong2,_sum);
			console.log($scope.suanfa8)
		}
		
		//全倒算法
		if($scope.user.quandao !=''){
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _sum = $scope.user.quandaoP ? 'P' : '';
			$scope.suanfa9 = setQuandao($scope.type0,_structure,$scope.user.quandao,_sum);
			console.log($scope.suanfa9)
		}
		
		//二兄弟算法
		if($scope.user.erxiongdi0){
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _choose = $scope.weishuArr[$scope.type0][$scope.type][5];
			var _sum = $scope.user.erxiongdi0P ? 'P' : '';
			$scope.suanfa10 = setxiongdi($scope.type0,_structure,_choose,_sum,2)
			console.log($scope.suanfa10)
		}
		var erxiongdiLength1 = 0;
		var _chooseerxiongdi1 = '';
		for(var i in $scope.user.erxiongdi1){
			if($scope.user.erxiongdi1[i]){
				_chooseerxiongdi1 = _chooseerxiongdi1+i+'、';
				erxiongdiLength1++;
			}
		}
		if(erxiongdiLength1 > 0){
			_chooseerxiongdi1 = _chooseerxiongdi1.substr(0,_chooseerxiongdi1.length-1);
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _sum = $scope.user.erxiongdi1P ? 'P' : '';
			$scope.suanfa11 = setxiongdi($scope.type0,_structure,_chooseerxiongdi1,_sum,2);
			console.log($scope.suanfa11)
		}
		var erxiongdiLength2 = 0;
		var _chooseerxiongdi2 = '';
		for(var i in $scope.user.erxiongdi2){
			if($scope.user.erxiongdi2[i]){
				_chooseerxiongdi2 = _chooseerxiongdi2+i+'、';
				erxiongdiLength2++;
			}
		}
		if(erxiongdiLength2 > 0){
			_chooseerxiongdi2 = _chooseerxiongdi2.substr(0,_chooseerxiongdi2.length-1);
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _sum = $scope.user.erxiongdi2P ? 'P' : '';
			$scope.suanfa12 = setxiongdi($scope.type0,_structure,_chooseerxiongdi2,_sum,2);
			console.log($scope.suanfa12);
		}
		
		
		//三兄弟算法
		if($scope.user.sanxiongdi0){
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _choose = $scope.weishuArr[$scope.type0][$scope.type][5];
			var _sum = $scope.user.sanxiongdi0P ? 'P' : '';
			$scope.suanfa13 = setxiongdi($scope.type0,_structure,_choose,_sum,3)
			console.log($scope.suanfa13)
		}
		var sanxiongdiLength1 = 0;
		var _choosesanxiongdi1 = '';
		for(var i in $scope.user.sanxiongdi1){
			if($scope.user.sanxiongdi1[i]){
				_choosesanxiongdi1 = _choosesanxiongdi1+i+'、';
				sanxiongdiLength1++;
			}
		}
		if(sanxiongdiLength1 > 0){
			_choosesanxiongdi1 = _choosesanxiongdi1.substr(0,_choosesanxiongdi1.length-1);
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _sum = $scope.user.sanxiongdi1P ? 'P' : '';
			$scope.suanfa14 = setxiongdi($scope.type0,_structure,_choosesanxiongdi1,_sum,3);
			console.log($scope.suanfa14)
		}
		var sanxiongdiLength2 = 0;
		var _choosesanxiongdi2 = '';
		for(var i in $scope.user.sanxiongdi2){
			if($scope.user.sanxiongdi2[i]){
				_choosesanxiongdi2 = _choosesanxiongdi2+i+'、';
				sanxiongdiLength2++;
			}
		}
		if(sanxiongdiLength2 > 0){
			_choosesanxiongdi2 = _choosesanxiongdi2.substr(0,_choosesanxiongdi2.length-1);
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _sum = $scope.user.sanxiongdi2P ? 'P' : '';
			$scope.suanfa15 = setxiongdi($scope.type0,_structure,_choosesanxiongdi2,_sum,3);
			console.log($scope.suanfa15);
		}
		
		//四兄弟算法
		if($scope.user.sixiongdi0){
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var _choose = $scope.weishuArr[$scope.type0][$scope.type][5];
			var _sum = $scope.user.sixiongdi0P ? 'P' : '';
			$scope.suanfa16 = setxiongdi($scope.type0,_structure,_choose,_sum,4)
			console.log($scope.suanfa16)
		}
		//指数算法
		if($scope.user.zhishu0 != '' || $scope.user.zhishu1 != ''){
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var allChoose = 0;
			var _choose = '';
			for(var i in $scope.user.zhishuArr0){
				if($scope.user.zhishuArr0[i]){
					_choose = _choose+i+'、';
					allChoose++;
				}
			}
			if(allChoose == 0) _choose = $scope.weishuArr[$scope.type0][$scope.type][5];
			else _choose = _choose.substr(0,_choose.length-1);
			var _sum;
			if($scope.user.zhishu0 != ''){
				_sum = $scope.user.zhishuArr0P ? 'P、'+$scope.user.zhishu0 : $scope.user.zhishu0;
				if($scope.user.zhishu1 != ''){
					_sum = _sum + '、' + 	$scope.user.zhishu1
				}
			}
			else if($scope.user.zhishu1 != ''){
				_sum = $scope.user.zhishuArr0P ? 'P、'+$scope.user.zhishu1 : $scope.user.zhishu1;
			}
			$scope.suanfa17 = setZhishu($scope.type0,_structure,_choose,_sum.toString())
			console.log($scope.suanfa17)
		}
		
		if($scope.user.zhishu2 != '' || $scope.user.zhishu3 != ''){
			var _structure = $scope.weishuArr[$scope.type0][$scope.type][4];
			var allChoose = 0;
			var _choose = '';
			for(var i in $scope.user.zhishuArr1){
				if($scope.user.zhishuArr1[i]){
					_choose = _choose+i+'、';
					allChoose++;
				}
			}
			if(allChoose == 0) _choose = $scope.weishuArr[$scope.type0][$scope.type][5];
			else _choose = _choose.substr(0,_choose.length-1);
			var _sum;
			if($scope.user.zhishu2 != ''){
				_sum = $scope.user.zhishuArr1P ? 'P、'+$scope.user.zhishu2 : $scope.user.zhishu2;
				if($scope.user.zhishu3 != ''){
					_sum = _sum + '、' + 	$scope.user.zhishu3
				}
			}
			else if($scope.user.zhishu3 != ''){
				_sum = $scope.user.zhishuArr1P ? 'P、'+$scope.user.zhishu3 : $scope.user.zhishu3;
			}
			$scope.suanfa18 = setZhishu($scope.type0,_structure,_choose,_sum.toString())
			console.log($scope.suanfa18)
		}
		$scope.allSuanfaArr = []
		for(var g = 0; g < 19; g++){
			if($scope['suanfa'+g] != undefined && $scope['suanfa'+g].length > 0){
				if($scope.allSuanfaArr.length == 0) $scope.allSuanfaArr = $scope['suanfa'+g];
				else $scope.allSuanfaArr = intersection($scope.allSuanfaArr,$scope['suanfa'+g]);
			}
		}
		if($scope.allSuanfaArr.length >3500){
			Common.showAlert('','当前组合超过3500个，请重新筛选！')
		}else if($scope.allSuanfaArr.length >0){
			Common.post("order/getPrepareBuyData",{
				no: $scope.allSuanfaArr.join(','),
				cash : $scope.user.money*1000
			},function(data){
				$scope.PrepareBuyData = data.body;
				for(var i in $scope.PrepareBuyData.list){
					$scope.PrepareBuyData.list[i].choose = true;
				}
				$scope.user.chooseAll = true;
				$scope.showTable = true;
				$ionicScrollDelegate.$getByHandle('mainScroll').scrollTop();
			},{},0)
			
		}else{
			Common.showAlert('','无符合此组合条件的号码！')
		}
//		$scope.showTable = true;
//		if($scope.user)
	}
	//全选组合类型
	$scope.chooseAllList = function(){
		for(var i in $scope.PrepareBuyData.list){
			$scope.PrepareBuyData.list[i].choose = $scope.user.chooseAll;
		}
	}
	$scope.hideTable = function(){
		$scope.showTable = false;
		$scope.user.money = '';
	}
	$scope.submitClick0 = function(){
		//最终下注
		var newArr = [];
		for(var i in $scope.PrepareBuyData.list){
			if($scope.PrepareBuyData.list[i].choose) newArr.push($scope.PrepareBuyData.list[i])
		}
		if(newArr.length == 0){
			Common.showAlert('','请选定！');
			return;
		}
		Common.post('order/orderNow',{
        	data : angular.toJson(newArr),
        	rule : ''
        },function(data){
        	Common.showConfirm('','下注成功！',function(){
	            $state.go('tab.index_baobiao')
	        },function(){
	            $scope.showTable = false;
				$scope.reset();
	        },'查看报表','返回')
        })
	}
	//重置
	$scope.reset = function(){
		$scope.inputNum = 0; 
		$scope.showKeyword = false;
		$scope.allSuanfaArr = [];
		for(var g = 0; g < 19; g++){
			$scope['suanfa'+g] = undefined;	
		}
		$scope.user = {
            money : '',
            qian:'',
            qianP : false,
            bai:'',
            baiP : false,
            shi : '',
            shiP : false,
            ge : '',
            geP : false,
            heshu0 : '',
            heshu0P : false,
            heshu1 : '',
            heshu1P : false,
            heshuArr0 : [false,false,false,false],
            heshuArr1 : [false,false,false,false],
            duishu0 : false,
            duishu1 : [false,false,false,false],
            duishu2 : [false,false,false,false],
            quandao : '',
            zhishu0 : '',
            zhishu1 : '',
            zhishu2 : '',
            zhishu3 : '',
            
            shuangchong0 : false,
            shuangchong1 : [false,false,false,false],
            shuangchong2 : [false,false,false,false],
            erxiongdi0 : false,
            erxiongdi0P : false,
            erxiongdi1 : [false,false,false,false],
            erxiongdi1P : false,
            erxiongdi2 : [false,false,false,false],
            erxiongdi2P : false,
            sanxiongdi0 : false,
            sanxiongdi0P : false,
            sanxiongdi1 : [false,false,false,false],
            sanxiongdi1P : false,
            sanxiongdi2 : [false,false,false,false],
            sanxiongdi2P : false,
            sixiongdi0 : false,
            sixiongdi0P : false,
			zhishuArr0 : [false,false,false,false],
			zhishuArr0P : false,
            zhishuArr1 : [false,false,false,false],
            zhishuArr1P : false,
        }
	}
    $scope.$on('$ionicView.beforeEnter', function() {
        $scope.type = 2;
        $scope.type0 = 0;
        $scope.inputNum = 0;        //光标位置
        $scope.inputType = 0;       // 输入类型
        $scope.showKeyword = false;
        $scope.bgfoucs = true;
        $scope.showTable = false;  	//显示列表
        $scope.newTime = $interval(function(){
            $scope.bgfoucs = !$scope.bgfoucs;
        },700)
        $scope.reset()
    });
}]);

var tab_table_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.tab_table', {
        url: '/tab_table',
        views: {
            'tab-table': {
                templateUrl: 'component/tab_table/tab_table.html',
                controller: 'tab_tableCtrl'
            }
        }
    });
};
tab_table_myConfig.$inject = ["$stateProvider"];
myapp.config(tab_table_myConfig);

angular.module('starter.tab_table',[])
.controller('tab_tableCtrl', ["$scope", "Common", "$state", function($scope,Common,$state) {
    

    $scope.itemClick = function(_num){
        if($scope.data[_num].check){
            $scope.data[_num].check = false;
        }
        else{
          $scope.data[_num].check = true;
        }  
    }
    $scope.changeClick = function(_num,_string){
        $scope.type =_num;
        $scope.typeString = _string;
        $scope.getList();
    }
    $scope.reload = function(){
    	$scope.getList();
    }
    $scope.submitClick = function(){
        
        var newDate = []
        for(var i = 0 ;i < $scope.data.length ; i++){
            if($scope.data[i].check) newDate.push($scope.data[i].no)
        }
        if(newDate.length == 0){
            Common.showAlert('','请选定！');
            return;
        }
        Common.post('order/getPrepareFormData',{
        	no : newDate.join(',')
        },function(data){
        	Common.setCache('table_date',data.body);
        	$state.go('tab.table_submit')
        })
    }
    $scope.$on('$ionicView.beforeEnter', function() {
        $scope.type = 2;
        $scope.typeString = 'oxxo'
        $scope.getList = function(){
        	Common.post('order/getPrepareBuyFormData',{
        		type : $scope.typeString
        	},function(data){
	        	$scope.data = data.body;
	        },{},0)
        }
        $scope.getList();
    });
}]);

var table_submit_myConfig = function($stateProvider){
    $stateProvider
    .state('tab.table_submit', {
        url: '/table_submit',
        views: {
            'tab-table': {
                templateUrl: 'component/table_submit/table_submit.html',
                controller: 'table_submitCtrl'
            }
        }
    });
};
table_submit_myConfig.$inject = ["$stateProvider"];
myapp.config(table_submit_myConfig);

angular.module('starter.table_submit',[])
.controller('table_submitCtrl', ["$scope", "Common", "$state", "$interval", function($scope,Common,$state,$interval) {
    
    $scope.numClick = function(_num){
        if(($scope.user.money.length >= 8 && _num != '<')|| ($scope.user.money == '' &&  _num == '<')) return;
        if(_num == '.' && $scope.user.money == ''){
            $scope.user.money = '0.';
        }else if(_num == '.' && $scope.user.money.indexOf('.') != -1){
            return;
        }
        else if(_num == '<' && $scope.user.money != ''){
            $scope.user.money = $scope.user.money.substring(0,$scope.user.money.length -1);
        }
        else if($scope.user.money.split('.').length == 2 && $scope.user.money.split('.')[1].length == 2){
            return;
        }else{
            $scope.user.money = $scope.user.money+_num;
        }
    }
    $scope.goback = function(){
        window.history.back()
    }
    $scope.submitClick = function(){
        if($scope.user.money == ''){
            Common.showAlert('','请输入下注金额！')
            return;
        }
        Common.post('order/orderNow',{
        	data : angular.toJson($scope.myDate.list),
        	rule : ''
        },function(data){
        	Common.showConfirm('','下注成功！',function(){
	            $state.go('tab.index_baobiao')
	        },function(){
	            window.history.back()
	        },'查看报表','返回')
        })
        
    }
    $scope.$on('$ionicView.beforeEnter', function() {
        $scope.title = "7025期";
        $scope.bgfoucs = true;
        $scope.newTime = $interval(function(){
            $scope.bgfoucs = !$scope.bgfoucs;
        },700)
        $scope.myDate = Common.getCache('table_date');
        $scope.user = {
            money : ''
        }
    });

    $scope.$on('$ionicView.beforeLeave', function() {
        $interval.cancel($scope.newTime);
    });
}]);

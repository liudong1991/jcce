// Generated by CoffeeScript 1.9.3
(function() {
  var gulp = require('gulp');
  var browserSync = require('browser-sync');
  var reload = browserSync.reload;
  var jshint = require('gulp-jshint');
  var sass = require('gulp-sass');
  var concat = require('gulp-concat');
  var uglify = require('gulp-uglify');
  var rename = require('gulp-rename');
  var minifycss = require('gulp-minify-css');
  var ngAnnotate = require('gulp-ng-annotate');
  var imagemin = require('gulp-imagemin');
  var pngquant = require('imagemin-pngquant');
  var cache = require('gulp-cache');
  var args = require('process.args')();
  var proxyMiddleware = require('http-proxy-middleware');

  gulp.task('help',function(){
    console.log('********upload 20170406 by cheng **********\n')
    console.log('------ script/init.sh         (生成配置文件)')
    console.log('------ script/add.sh XXX      (新建XXX的功能模块)')
    console.log('------ script/remove.sh XXX   (删除XXX的功能模块)')
    console.log('------ gulp lint ---name=XXX  (检查XXX模块的js代码错误)')
    console.log('------ gulp run               (搭建测试环境)')
    console.log('------ gulp build             (混淆编译压缩打包代码，生成线上版本)')
  })
  
  //检查js代码是否有错误
  gulp.task('lint',function(){
    //var arg = args.lint.name;
    gulp.src('./js/all.min.js')
      .pipe(jshint())
      .pipe(jshint.reporter('default'));
  })
  //编译压缩sass --debug
  gulp.task('sass-debug',function(){
    gulp.src(['./component/**/*.scss','./scss/**/*.scss'])
      .pipe(sass())
      .pipe(concat('all.min.css'))                            //- 合并后的文件名
      .pipe(gulp.dest('./css'))
  })
  //js合并压缩代码 -- debug
  gulp.task('scripts-debug',function(){
    gulp.src(['./js/**/*.js','./component/**/*.js','!./js/all.min.js'])
      .pipe(concat('all.min.js'))
      .pipe(ngAnnotate())
      .pipe(gulp.dest('./js'))
  })
  //开发环境 
  gulp.task('run', function() {
    gulp.run('sass-debug','scripts-debug');
    var middleware = proxyMiddleware(['/interfaces'], {target: "http://rapapi.org/mockjsdata/31845/", changeOrigin: true});
    browserSync.init({
      server: {
        baseDir: './'
      },
      port: 8000,
      ui: {
        port: 8001
      },
//    middleware: middleware
    });
    gulp.watch(['./component/**/*','./scss/**/*', './js/**/*.js','!./js/all.min.js'],['sass-debug','scripts-debug']);
    gulp.watch("./css/all.min.css").on("change", reload);
  });
  

  //编译压缩sass
  gulp.task('sass',function(){
    gulp.src(['./component/**/*.scss','./scss/**/*.scss'])
      .pipe(sass())
      .pipe(concat('all.min.css'))                            //- 合并后的文件名
      .pipe(minifycss())
      .pipe(gulp.dest('./dist/css'))
  })

  //js合并压缩代码
  gulp.task('scripts',function(){
    gulp.src(['./js/**/*.js','./component/**/*.js','!./js/all.min.js'])
      .pipe(concat('all.min.js'))
      .pipe(ngAnnotate())
      .pipe(uglify({
        mangle: {except: ['require' ,'exports' ,'module' ,'$']},
        outSourceMap: false
      }))
      .pipe(gulp.dest('./dist/js'));
  })
  //img压缩
  gulp.task('imagemin', function () {
    gulp.src('img/**/*.{png,jpg,gif,ico}')
        .pipe(cache(imagemin({
            progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片
            interlaced: true, //类型：Boolean 默认：false 隔行扫描gif进行渲染
            multipass: true, //类型：Boolean 默认：false 多次优化svg直到完全优化
            use: [pngquant()] //使用pngquant来压缩png图片
        })))
        .pipe(gulp.dest('./dist/img'));
    gulp.src('index.html')
      .pipe(gulp.dest('./dist'));
    gulp.src('config.js')
      .pipe(gulp.dest('./dist'));
    gulp.src('component/**/*.html')
      .pipe(gulp.dest('./dist/component'));
    gulp.src('lib/**/*')
      .pipe(gulp.dest('./dist/lib'));
	  gulp.src('data/**/*')
      .pipe(gulp.dest('./dist/data'));
  })
  //生产环境
  gulp.task('build', function() {
    gulp.run('sass','scripts','imagemin');
    browserSync.init({
      server: {
        baseDir: 'dist/'
      },
      port: 8000,
      ui: {
        port: 8001
      }
    });
  });
  gulp.task('default',['help']);
}).call(this);

//# sourceMappingURL=gulpfile.js.map
